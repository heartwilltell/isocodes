package isocodes

import (
	"reflect"
	"sort"
	"testing"
)

func TestCountryCode_Alpha3(t *testing.T) {
	type tcase struct {
		code CountryCode
		want string
	}

	tests := map[string]tcase{
		"AD": {AD, "AND"},
		"AE": {AE, "ARE"},
		"AF": {AF, "AFG"},
		"AG": {AG, "ATG"},
		"AI": {AI, "AIA"},
		"AL": {AL, "ALB"},
		"AM": {AM, "ARM"},
		"AO": {AO, "AGO"},
		"AQ": {AQ, "ATA"},
		"AR": {AR, "ARG"},
		"AS": {AS, "ASM"},
		"AT": {AT, "AUT"},
		"AU": {AU, "AUS"},
		"AW": {AW, "ABW"},
		"AX": {AX, "ALA"},
		"AZ": {AZ, "AZE"},
		"BA": {BA, "BIH"},
		"BB": {BB, "BRB"},
		"BD": {BD, "BGD"},
		"BE": {BE, "BEL"},
		"BF": {BF, "BFA"},
		"BG": {BG, "BGR"},
		"BH": {BH, "BHR"},
		"BI": {BI, "BDI"},
		"BJ": {BJ, "BEN"},
		"BL": {BL, "BLM"},
		"BM": {BM, "BMU"},
		"BN": {BN, "BRN"},
		"BO": {BO, "BOL"},
		"BQ": {BQ, "BES"},
		"BR": {BR, "BRA"},
		"BS": {BS, "BHS"},
		"BT": {BT, "BTN"},
		"BV": {BV, "BVT"},
		"BW": {BW, "BWA"},
		"BY": {BY, "BLR"},
		"BZ": {BZ, "BLZ"},
		"CA": {CA, "CAN"},
		"CC": {CC, "CCK"},
		"CD": {CD, "COD"},
		"CF": {CF, "CAF"},
		"CG": {CG, "COG"},
		"CH": {CH, "CHE"},
		"CI": {CI, "CIV"},
		"CK": {CK, "COK"},
		"CL": {CL, "CHL"},
		"CM": {CM, "CMR"},
		"CN": {CN, "CHN"},
		"CO": {CO, "COL"},
		"CR": {CR, "CRI"},
		"CU": {CU, "CUB"},
		"CV": {CV, "CPV"},
		"CW": {CW, "CUW"},
		"CX": {CX, "CXR"},
		"CY": {CY, "CYP"},
		"CZ": {CZ, "CZE"},
		"DE": {DE, "DEU"},
		"DJ": {DJ, "DJI"},
		"DK": {DK, "DNK"},
		"DM": {DM, "DMA"},
		"DO": {DO, "DOM"},
		"DZ": {DZ, "DZA"},
		"EC": {EC, "ECU"},
		"EE": {EE, "EST"},
		"EG": {EG, "EGY"},
		"EH": {EH, "ESH"},
		"ER": {ER, "ERI"},
		"ES": {ES, "ESP"},
		"ET": {ET, "ETH"},
		"FI": {FI, "FIN"},
		"FJ": {FJ, "FJI"},
		"FK": {FK, "FLK"},
		"FM": {FM, "FSM"},
		"FO": {FO, "FRO"},
		"FR": {FR, "FRA"},
		"GA": {GA, "GAB"},
		"GB": {GB, "GBR"},
		"GD": {GD, "GRD"},
		"GE": {GE, "GEO"},
		"GF": {GF, "GUF"},
		"GG": {GG, "GGY"},
		"GH": {GH, "GHA"},
		"GI": {GI, "GIB"},
		"GL": {GL, "GRL"},
		"GM": {GM, "GMB"},
		"GN": {GN, "GIN"},
		"GP": {GP, "GLP"},
		"GQ": {GQ, "GNQ"},
		"GR": {GR, "GRC"},
		"GS": {GS, "SGS"},
		"GT": {GT, "GTM"},
		"GU": {GU, "GUM"},
		"GW": {GW, "GNB"},
		"GY": {GY, "GUY"},
		"HK": {HK, "HKG"},
		"HM": {HM, "HMD"},
		"HN": {HN, "HND"},
		"HR": {HR, "HRV"},
		"HT": {HT, "HTI"},
		"HU": {HU, "HUN"},
		"ID": {ID, "IDN"},
		"IE": {IE, "IRL"},
		"IL": {IL, "ISR"},
		"IM": {IM, "IMN"},
		"IN": {IN, "IND"},
		"IO": {IO, "IOT"},
		"IQ": {IQ, "IRQ"},
		"IR": {IR, "IRN"},
		"IS": {IS, "ISL"},
		"IT": {IT, "ITA"},
		"JE": {JE, "JEY"},
		"JM": {JM, "JAM"},
		"JO": {JO, "JOR"},
		"JP": {JP, "JPN"},
		"KE": {KE, "KEN"},
		"KG": {KG, "KGZ"},
		"KH": {KH, "KHM"},
		"KI": {KI, "KIR"},
		"KM": {KM, "COM"},
		"KN": {KN, "KNA"},
		"KP": {KP, "PRK"},
		"KR": {KR, "KOR"},
		"KW": {KW, "KWT"},
		"KY": {KY, "CYM"},
		"KZ": {KZ, "KAZ"},
		"LA": {LA, "LAO"},
		"LB": {LB, "LBN"},
		"LC": {LC, "LCA"},
		"LI": {LI, "LIE"},
		"LK": {LK, "LKA"},
		"LR": {LR, "LBR"},
		"LS": {LS, "LSO"},
		"LT": {LT, "LTU"},
		"LU": {LU, "LUX"},
		"LV": {LV, "LVA"},
		"LY": {LY, "LBY"},
		"MA": {MA, "MAR"},
		"MC": {MC, "MCO"},
		"MD": {MD, "MDA"},
		"ME": {ME, "MNE"},
		"MF": {MF, "MAF"},
		"MG": {MG, "MDG"},
		"MH": {MH, "MHL"},
		"MK": {MK, "MKD"},
		"ML": {ML, "MLI"},
		"MM": {MM, "MMR"},
		"MN": {MN, "MNG"},
		"MO": {MO, "MAC"},
		"MP": {MP, "MNP"},
		"MQ": {MQ, "MTQ"},
		"MR": {MR, "MRT"},
		"MS": {MS, "MSR"},
		"MT": {MT, "MLT"},
		"MU": {MU, "MUS"},
		"MV": {MV, "MDV"},
		"MW": {MW, "MWI"},
		"MX": {MX, "MEX"},
		"MY": {MY, "MYS"},
		"MZ": {MZ, "MOZ"},
		"NA": {NA, "NAM"},
		"NC": {NC, "NCL"},
		"NE": {NE, "NER"},
		"NF": {NF, "NFK"},
		"NG": {NG, "NGA"},
		"NI": {NI, "NIC"},
		"NL": {NL, "NLD"},
		"NO": {NO, "NOR"},
		"NP": {NP, "NPL"},
		"NR": {NR, "NRU"},
		"NU": {NU, "NIU"},
		"NZ": {NZ, "NZL"},
		"OM": {OM, "OMN"},
		"PA": {PA, "PAN"},
		"PE": {PE, "PER"},
		"PF": {PF, "PYF"},
		"PG": {PG, "PNG"},
		"PH": {PH, "PHL"},
		"PK": {PK, "PAK"},
		"PL": {PL, "POL"},
		"PM": {PM, "SPM"},
		"PN": {PN, "PCN"},
		"PR": {PR, "PRI"},
		"PS": {PS, "PSE"},
		"PT": {PT, "PRT"},
		"PW": {PW, "PLW"},
		"PY": {PY, "PRY"},
		"QA": {QA, "QAT"},
		"RE": {RE, "REU"},
		"RO": {RO, "ROU"},
		"RS": {RS, "SRB"},
		"RU": {RU, "RUS"},
		"RW": {RW, "RWA"},
		"SA": {SA, "SAU"},
		"SB": {SB, "SLB"},
		"SC": {SC, "SYC"},
		"SD": {SD, "SDN"},
		"SE": {SE, "SWE"},
		"SG": {SG, "SGP"},
		"SH": {SH, "SHN"},
		"SI": {SI, "SVN"},
		"SJ": {SJ, "SJM"},
		"SK": {SK, "SVK"},
		"SL": {SL, "SLE"},
		"SM": {SM, "SMR"},
		"SN": {SN, "SEN"},
		"SO": {SO, "SOM"},
		"SR": {SR, "SUR"},
		"SS": {SS, "SSD"},
		"ST": {ST, "STP"},
		"SV": {SV, "SLV"},
		"SX": {SX, "SXM"},
		"SY": {SY, "SYR"},
		"SZ": {SZ, "SWZ"},
		"TC": {TC, "TCA"},
		"TD": {TD, "TCD"},
		"TF": {TF, "ATF"},
		"TG": {TG, "TGO"},
		"TH": {TH, "THA"},
		"TJ": {TJ, "TJK"},
		"TK": {TK, "TKL"},
		"TL": {TL, "TLS"},
		"TM": {TM, "TKM"},
		"TN": {TN, "TUN"},
		"TO": {TO, "TON"},
		"TR": {TR, "TUR"},
		"TT": {TT, "TTO"},
		"TV": {TV, "TUV"},
		"TW": {TW, "TWN"},
		"TZ": {TZ, "TZA"},
		"UA": {UA, "UKR"},
		"UG": {UG, "UGA"},
		"UM": {UM, "UMI"},
		"US": {US, "USA"},
		"UY": {UY, "URY"},
		"UZ": {UZ, "UZB"},
		"VA": {VA, "VAT"},
		"VC": {VC, "VCT"},
		"VE": {VE, "VEN"},
		"VG": {VG, "VGB"},
		"VI": {VI, "VIR"},
		"VN": {VN, "VNM"},
		"VU": {VU, "VUT"},
		"WF": {WF, "WLF"},
		"WS": {WS, "WSM"},
		"YE": {YE, "YEM"},
		"YT": {YT, "MYT"},
		"ZA": {ZA, "ZAF"},
		"ZM": {ZM, "ZMB"},
		"ZW": {ZW, "ZWE"},
	}

	for name, tc := range tests {
		t.Run(name, func(t *testing.T) {
			if got := tc.code.Alpha3(); got != tc.want {
				t.Errorf("Alpha3() = %v, want %v", got, tc.want)
			}
		})
	}
}

func TestCountryCode_Flag(t *testing.T) {
	type tcase struct {
		code CountryCode
		want string
	}

	tests := map[string]tcase{
		"AD": {AD, "ðŸ‡¦ðŸ‡©"},
		"AE": {AE, "ðŸ‡¦ðŸ‡ª"},
		"AF": {AF, "ðŸ‡¦ðŸ‡«"},
		"AG": {AG, "ðŸ‡¦ðŸ‡¬"},
		"AI": {AI, "ðŸ‡¦ðŸ‡®"},
		"AL": {AL, "ðŸ‡¦ðŸ‡±"},
		"AM": {AM, "ðŸ‡¦ðŸ‡²"},
		"AO": {AO, "ðŸ‡¦ðŸ‡´"},
		"AQ": {AQ, "ðŸ‡¦ðŸ‡¶"},
		"AR": {AR, "ðŸ‡¦ðŸ‡·"},
		"AS": {AS, "ðŸ‡¦ðŸ‡¸"},
		"AT": {AT, "ðŸ‡¦ðŸ‡¹"},
		"AU": {AU, "ðŸ‡¦ðŸ‡º"},
		"AW": {AW, "ðŸ‡¦ðŸ‡¼"},
		"AX": {AX, "ðŸ‡¦ðŸ‡½"},
		"AZ": {AZ, "ðŸ‡¦ðŸ‡¿"},
		"BA": {BA, "ðŸ‡§ðŸ‡¦"},
		"BB": {BB, "ðŸ‡§ðŸ‡§"},
		"BD": {BD, "ðŸ‡§ðŸ‡©"},
		"BE": {BE, "ðŸ‡§ðŸ‡ª"},
		"BF": {BF, "ðŸ‡§ðŸ‡«"},
		"BG": {BG, "ðŸ‡§ðŸ‡¬"},
		"BH": {BH, "ðŸ‡§ðŸ‡­"},
		"BI": {BI, "ðŸ‡§ðŸ‡®"},
		"BJ": {BJ, "ðŸ‡§ðŸ‡¯"},
		"BL": {BL, "ðŸ‡§ðŸ‡±"},
		"BM": {BM, "ðŸ‡§ðŸ‡²"},
		"BN": {BN, "ðŸ‡§ðŸ‡³"},
		"BO": {BO, "ðŸ‡§ðŸ‡´"},
		"BQ": {BQ, "ðŸ‡§ðŸ‡¶"},
		"BR": {BR, "ðŸ‡§ðŸ‡·"},
		"BS": {BS, "ðŸ‡§ðŸ‡¸"},
		"BT": {BT, "ðŸ‡§ðŸ‡¹"},
		"BV": {BV, "ðŸ‡§ðŸ‡»"},
		"BW": {BW, "ðŸ‡§ðŸ‡¼"},
		"BY": {BY, "ðŸ‡§ðŸ‡¾"},
		"BZ": {BZ, "ðŸ‡§ðŸ‡¿"},
		"CA": {CA, "ðŸ‡¨ðŸ‡¦"},
		"CC": {CC, "ðŸ‡¨ðŸ‡¨"},
		"CD": {CD, "ðŸ‡¨ðŸ‡©"},
		"CF": {CF, "ðŸ‡¨ðŸ‡«"},
		"CG": {CG, "ðŸ‡¨ðŸ‡¬"},
		"CH": {CH, "ðŸ‡¨ðŸ‡­"},
		"CI": {CI, "ðŸ‡¨ðŸ‡®"},
		"CK": {CK, "ðŸ‡¨ðŸ‡°"},
		"CL": {CL, "ðŸ‡¨ðŸ‡±"},
		"CM": {CM, "ðŸ‡¨ðŸ‡²"},
		"CN": {CN, "ðŸ‡¨ðŸ‡³"},
		"CO": {CO, "ðŸ‡¨ðŸ‡´"},
		"CR": {CR, "ðŸ‡¨ðŸ‡·"},
		"CU": {CU, "ðŸ‡¨ðŸ‡º"},
		"CV": {CV, "ðŸ‡¨ðŸ‡»"},
		"CW": {CW, "ðŸ‡¨ðŸ‡¼"},
		"CX": {CX, "ðŸ‡¨ðŸ‡½"},
		"CY": {CY, "ðŸ‡¨ðŸ‡¾"},
		"CZ": {CZ, "ðŸ‡¨ðŸ‡¿"},
		"DE": {DE, "ðŸ‡©ðŸ‡ª"},
		"DJ": {DJ, "ðŸ‡©ðŸ‡¯"},
		"DK": {DK, "ðŸ‡©ðŸ‡°"},
		"DM": {DM, "ðŸ‡©ðŸ‡²"},
		"DO": {DO, "ðŸ‡©ðŸ‡´"},
		"DZ": {DZ, "ðŸ‡©ðŸ‡¿"},
		"EC": {EC, "ðŸ‡ªðŸ‡¨"},
		"EE": {EE, "ðŸ‡ªðŸ‡ª"},
		"EG": {EG, "ðŸ‡ªðŸ‡¬"},
		"EH": {EH, "ðŸ‡ªðŸ‡­"},
		"ER": {ER, "ðŸ‡ªðŸ‡·"},
		"ES": {ES, "ðŸ‡ªðŸ‡¸"},
		"ET": {ET, "ðŸ‡ªðŸ‡¹"},
		"FI": {FI, "ðŸ‡«ðŸ‡®"},
		"FJ": {FJ, "ðŸ‡«ðŸ‡¯"},
		"FK": {FK, "ðŸ‡«ðŸ‡°"},
		"FM": {FM, "ðŸ‡«ðŸ‡²"},
		"FO": {FO, "ðŸ‡«ðŸ‡´"},
		"FR": {FR, "ðŸ‡«ðŸ‡·"},
		"GA": {GA, "ðŸ‡¬ðŸ‡¦"},
		"GB": {GB, "ðŸ‡¬ðŸ‡§"},
		"GD": {GD, "ðŸ‡¬ðŸ‡©"},
		"GE": {GE, "ðŸ‡¬ðŸ‡ª"},
		"GF": {GF, "ðŸ‡¬ðŸ‡«"},
		"GG": {GG, "ðŸ‡¬ðŸ‡¬"},
		"GH": {GH, "ðŸ‡¬ðŸ‡­"},
		"GI": {GI, "ðŸ‡¬ðŸ‡®"},
		"GL": {GL, "ðŸ‡¬ðŸ‡±"},
		"GM": {GM, "ðŸ‡¬ðŸ‡²"},
		"GN": {GN, "ðŸ‡¬ðŸ‡³"},
		"GP": {GP, "ðŸ‡¬ðŸ‡µ"},
		"GQ": {GQ, "ðŸ‡¬ðŸ‡¶"},
		"GR": {GR, "ðŸ‡¬ðŸ‡·"},
		"GS": {GS, "ðŸ‡¬ðŸ‡¸"},
		"GT": {GT, "ðŸ‡¬ðŸ‡¹"},
		"GU": {GU, "ðŸ‡¬ðŸ‡º"},
		"GW": {GW, "ðŸ‡¬ðŸ‡¼"},
		"GY": {GY, "ðŸ‡¬ðŸ‡¾"},
		"HK": {HK, "ðŸ‡­ðŸ‡°"},
		"HM": {HM, "ðŸ‡­ðŸ‡²"},
		"HN": {HN, "ðŸ‡­ðŸ‡³"},
		"HR": {HR, "ðŸ‡­ðŸ‡·"},
		"HT": {HT, "ðŸ‡­ðŸ‡¹"},
		"HU": {HU, "ðŸ‡­ðŸ‡º"},
		"ID": {ID, "ðŸ‡®ðŸ‡©"},
		"IE": {IE, "ðŸ‡®ðŸ‡ª"},
		"IL": {IL, "ðŸ‡®ðŸ‡±"},
		"IM": {IM, "ðŸ‡®ðŸ‡²"},
		"IN": {IN, "ðŸ‡®ðŸ‡³"},
		"IO": {IO, "ðŸ‡®ðŸ‡´"},
		"IQ": {IQ, "ðŸ‡®ðŸ‡¶"},
		"IR": {IR, "ðŸ‡®ðŸ‡·"},
		"IS": {IS, "ðŸ‡®ðŸ‡¸"},
		"IT": {IT, "ðŸ‡®ðŸ‡¹"},
		"JE": {JE, "ðŸ‡¯ðŸ‡ª"},
		"JM": {JM, "ðŸ‡¯ðŸ‡²"},
		"JO": {JO, "ðŸ‡¯ðŸ‡´"},
		"JP": {JP, "ðŸ‡¯ðŸ‡µ"},
		"KE": {KE, "ðŸ‡°ðŸ‡ª"},
		"KG": {KG, "ðŸ‡°ðŸ‡¬"},
		"KH": {KH, "ðŸ‡°ðŸ‡­"},
		"KI": {KI, "ðŸ‡°ðŸ‡®"},
		"KM": {KM, "ðŸ‡°ðŸ‡²"},
		"KN": {KN, "ðŸ‡°ðŸ‡³"},
		"KP": {KP, "ðŸ‡°ðŸ‡µ"},
		"KR": {KR, "ðŸ‡°ðŸ‡·"},
		"KW": {KW, "ðŸ‡°ðŸ‡¼"},
		"KY": {KY, "ðŸ‡°ðŸ‡¾"},
		"KZ": {KZ, "ðŸ‡°ðŸ‡¿"},
		"LA": {LA, "ðŸ‡±ðŸ‡¦"},
		"LB": {LB, "ðŸ‡±ðŸ‡§"},
		"LC": {LC, "ðŸ‡±ðŸ‡¨"},
		"LI": {LI, "ðŸ‡±ðŸ‡®"},
		"LK": {LK, "ðŸ‡±ðŸ‡°"},
		"LR": {LR, "ðŸ‡±ðŸ‡·"},
		"LS": {LS, "ðŸ‡±ðŸ‡¸"},
		"LT": {LT, "ðŸ‡±ðŸ‡¹"},
		"LU": {LU, "ðŸ‡±ðŸ‡º"},
		"LV": {LV, "ðŸ‡±ðŸ‡»"},
		"LY": {LY, "ðŸ‡±ðŸ‡¾"},
		"MA": {MA, "ðŸ‡²ðŸ‡¦"},
		"MC": {MC, "ðŸ‡²ðŸ‡¨"},
		"MD": {MD, "ðŸ‡²ðŸ‡©"},
		"ME": {ME, "ðŸ‡²ðŸ‡ª"},
		"MF": {MF, "ðŸ‡²ðŸ‡«"},
		"MG": {MG, "ðŸ‡²ðŸ‡¬"},
		"MH": {MH, "ðŸ‡²ðŸ‡­"},
		"MK": {MK, "ðŸ‡²ðŸ‡°"},
		"ML": {ML, "ðŸ‡²ðŸ‡±"},
		"MM": {MM, "ðŸ‡²ðŸ‡²"},
		"MN": {MN, "ðŸ‡²ðŸ‡³"},
		"MO": {MO, "ðŸ‡²ðŸ‡´"},
		"MP": {MP, "ðŸ‡²ðŸ‡µ"},
		"MQ": {MQ, "ðŸ‡²ðŸ‡¶"},
		"MR": {MR, "ðŸ‡²ðŸ‡·"},
		"MS": {MS, "ðŸ‡²ðŸ‡¸"},
		"MT": {MT, "ðŸ‡²ðŸ‡¹"},
		"MU": {MU, "ðŸ‡²ðŸ‡º"},
		"MV": {MV, "ðŸ‡²ðŸ‡»"},
		"MW": {MW, "ðŸ‡²ðŸ‡¼"},
		"MX": {MX, "ðŸ‡²ðŸ‡½"},
		"MY": {MY, "ðŸ‡²ðŸ‡¾"},
		"MZ": {MZ, "ðŸ‡²ðŸ‡¿"},
		"NA": {NA, "ðŸ‡³ðŸ‡¦"},
		"NC": {NC, "ðŸ‡³ðŸ‡¨"},
		"NE": {NE, "ðŸ‡³ðŸ‡ª"},
		"NF": {NF, "ðŸ‡³ðŸ‡«"},
		"NG": {NG, "ðŸ‡³ðŸ‡¬"},
		"NI": {NI, "ðŸ‡³ðŸ‡®"},
		"NL": {NL, "ðŸ‡³ðŸ‡±"},
		"NO": {NO, "ðŸ‡³ðŸ‡´"},
		"NP": {NP, "ðŸ‡³ðŸ‡µ"},
		"NR": {NR, "ðŸ‡³ðŸ‡·"},
		"NU": {NU, "ðŸ‡³ðŸ‡º"},
		"NZ": {NZ, "ðŸ‡³ðŸ‡¿"},
		"OM": {OM, "ðŸ‡´ðŸ‡²"},
		"PA": {PA, "ðŸ‡µðŸ‡¦"},
		"PE": {PE, "ðŸ‡µðŸ‡ª"},
		"PF": {PF, "ðŸ‡µðŸ‡«"},
		"PG": {PG, "ðŸ‡µðŸ‡¬"},
		"PH": {PH, "ðŸ‡µðŸ‡­"},
		"PK": {PK, "ðŸ‡µðŸ‡°"},
		"PL": {PL, "ðŸ‡µðŸ‡±"},
		"PM": {PM, "ðŸ‡µðŸ‡²"},
		"PN": {PN, "ðŸ‡µðŸ‡³"},
		"PR": {PR, "ðŸ‡µðŸ‡·"},
		"PS": {PS, "ðŸ‡µðŸ‡¸"},
		"PT": {PT, "ðŸ‡µðŸ‡¹"},
		"PW": {PW, "ðŸ‡µðŸ‡¼"},
		"PY": {PY, "ðŸ‡µðŸ‡¾"},
		"QA": {QA, "ðŸ‡¶ðŸ‡¦"},
		"RE": {RE, "ðŸ‡·ðŸ‡ª"},
		"RO": {RO, "ðŸ‡·ðŸ‡´"},
		"RS": {RS, "ðŸ‡·ðŸ‡¸"},
		"RU": {RU, "ðŸ‡·ðŸ‡º"},
		"RW": {RW, "ðŸ‡·ðŸ‡¼"},
		"SA": {SA, "ðŸ‡¸ðŸ‡¦"},
		"SB": {SB, "ðŸ‡¸ðŸ‡§"},
		"SC": {SC, "ðŸ‡¸ðŸ‡¨"},
		"SD": {SD, "ðŸ‡¸ðŸ‡©"},
		"SE": {SE, "ðŸ‡¸ðŸ‡ª"},
		"SG": {SG, "ðŸ‡¸ðŸ‡¬"},
		"SH": {SH, "ðŸ‡¸ðŸ‡­"},
		"SI": {SI, "ðŸ‡¸ðŸ‡®"},
		"SJ": {SJ, "ðŸ‡¸ðŸ‡¯"},
		"SK": {SK, "ðŸ‡¸ðŸ‡°"},
		"SL": {SL, "ðŸ‡¸ðŸ‡±"},
		"SM": {SM, "ðŸ‡¸ðŸ‡²"},
		"SN": {SN, "ðŸ‡¸ðŸ‡³"},
		"SO": {SO, "ðŸ‡¸ðŸ‡´"},
		"SR": {SR, "ðŸ‡¸ðŸ‡·"},
		"SS": {SS, "ðŸ‡¸ðŸ‡¸"},
		"ST": {ST, "ðŸ‡¸ðŸ‡¹"},
		"SV": {SV, "ðŸ‡¸ðŸ‡»"},
		"SX": {SX, "ðŸ‡¸ðŸ‡½"},
		"SY": {SY, "ðŸ‡¸ðŸ‡¾"},
		"SZ": {SZ, "ðŸ‡¸ðŸ‡¿"},
		"TC": {TC, "ðŸ‡¹ðŸ‡¨"},
		"TD": {TD, "ðŸ‡¹ðŸ‡©"},
		"TF": {TF, "ðŸ‡¹ðŸ‡«"},
		"TG": {TG, "ðŸ‡¹ðŸ‡¬"},
		"TH": {TH, "ðŸ‡¹ðŸ‡­"},
		"TJ": {TJ, "ðŸ‡¹ðŸ‡¯"},
		"TK": {TK, "ðŸ‡¹ðŸ‡°"},
		"TL": {TL, "ðŸ‡¹ðŸ‡±"},
		"TM": {TM, "ðŸ‡¹ðŸ‡²"},
		"TN": {TN, "ðŸ‡¹ðŸ‡³"},
		"TO": {TO, "ðŸ‡¹ðŸ‡´"},
		"TR": {TR, "ðŸ‡¹ðŸ‡·"},
		"TT": {TT, "ðŸ‡¹ðŸ‡¹"},
		"TV": {TV, "ðŸ‡¹ðŸ‡»"},
		"TW": {TW, "ðŸ‡¹ðŸ‡¼"},
		"TZ": {TZ, "ðŸ‡¹ðŸ‡¿"},
		"UA": {UA, "ðŸ‡ºðŸ‡¦"},
		"UG": {UG, "ðŸ‡ºðŸ‡¬"},
		"UM": {UM, "ðŸ‡ºðŸ‡²"},
		"US": {US, "ðŸ‡ºðŸ‡¸"},
		"UY": {UY, "ðŸ‡ºðŸ‡¾"},
		"UZ": {UZ, "ðŸ‡ºðŸ‡¿"},
		"VA": {VA, "ðŸ‡»ðŸ‡¦"},
		"VC": {VC, "ðŸ‡»ðŸ‡¨"},
		"VE": {VE, "ðŸ‡»ðŸ‡ª"},
		"VG": {VG, "ðŸ‡»ðŸ‡¬"},
		"VI": {VI, "ðŸ‡»ðŸ‡®"},
		"VN": {VN, "ðŸ‡»ðŸ‡³"},
		"VU": {VU, "ðŸ‡»ðŸ‡º"},
		"WF": {WF, "ðŸ‡¼ðŸ‡«"},
		"WS": {WS, "ðŸ‡¼ðŸ‡¸"},
		"YE": {YE, "ðŸ‡¾ðŸ‡ª"},
		"YT": {YT, "ðŸ‡¾ðŸ‡¹"},
		"ZA": {ZA, "ðŸ‡¿ðŸ‡¦"},
		"ZM": {ZM, "ðŸ‡¿ðŸ‡²"},
		"ZW": {ZW, "ðŸ‡¿ðŸ‡¼"},
	}

	for name, tc := range tests {
		t.Run(name, func(t *testing.T) {
			if got := tc.code.Flag(); got != tc.want {
				t.Errorf("Flag() = %v, want %v", got, tc.want)
			}
		})
	}
}

func TestCountryCode_MarshalJSON(t *testing.T) {
	type tcase struct {
		code    CountryCode
		want    []byte
		wantErr error
	}

	tests := map[string]tcase{
		"ErrMarshalJSON": {0, nil, ErrMarshalJSON},
		"AD":             {AD, []byte(`"AD"`), nil},
		"AE":             {AE, []byte(`"AE"`), nil},
		"AF":             {AF, []byte(`"AF"`), nil},
		"AG":             {AG, []byte(`"AG"`), nil},
		"AI":             {AI, []byte(`"AI"`), nil},
		"AL":             {AL, []byte(`"AL"`), nil},
		"AM":             {AM, []byte(`"AM"`), nil},
		"AO":             {AO, []byte(`"AO"`), nil},
		"AQ":             {AQ, []byte(`"AQ"`), nil},
		"AR":             {AR, []byte(`"AR"`), nil},
		"AS":             {AS, []byte(`"AS"`), nil},
		"AT":             {AT, []byte(`"AT"`), nil},
		"AU":             {AU, []byte(`"AU"`), nil},
		"AW":             {AW, []byte(`"AW"`), nil},
		"AX":             {AX, []byte(`"AX"`), nil},
		"AZ":             {AZ, []byte(`"AZ"`), nil},
		"BA":             {BA, []byte(`"BA"`), nil},
		"BB":             {BB, []byte(`"BB"`), nil},
		"BD":             {BD, []byte(`"BD"`), nil},
		"BE":             {BE, []byte(`"BE"`), nil},
		"BF":             {BF, []byte(`"BF"`), nil},
		"BG":             {BG, []byte(`"BG"`), nil},
		"BH":             {BH, []byte(`"BH"`), nil},
		"BI":             {BI, []byte(`"BI"`), nil},
		"BJ":             {BJ, []byte(`"BJ"`), nil},
		"BL":             {BL, []byte(`"BL"`), nil},
		"BM":             {BM, []byte(`"BM"`), nil},
		"BN":             {BN, []byte(`"BN"`), nil},
		"BO":             {BO, []byte(`"BO"`), nil},
		"BQ":             {BQ, []byte(`"BQ"`), nil},
		"BR":             {BR, []byte(`"BR"`), nil},
		"BS":             {BS, []byte(`"BS"`), nil},
		"BT":             {BT, []byte(`"BT"`), nil},
		"BV":             {BV, []byte(`"BV"`), nil},
		"BW":             {BW, []byte(`"BW"`), nil},
		"BY":             {BY, []byte(`"BY"`), nil},
		"BZ":             {BZ, []byte(`"BZ"`), nil},
		"CA":             {CA, []byte(`"CA"`), nil},
		"CC":             {CC, []byte(`"CC"`), nil},
		"CD":             {CD, []byte(`"CD"`), nil},
		"CF":             {CF, []byte(`"CF"`), nil},
		"CG":             {CG, []byte(`"CG"`), nil},
		"CH":             {CH, []byte(`"CH"`), nil},
		"CI":             {CI, []byte(`"CI"`), nil},
		"CK":             {CK, []byte(`"CK"`), nil},
		"CL":             {CL, []byte(`"CL"`), nil},
		"CM":             {CM, []byte(`"CM"`), nil},
		"CN":             {CN, []byte(`"CN"`), nil},
		"CO":             {CO, []byte(`"CO"`), nil},
		"CR":             {CR, []byte(`"CR"`), nil},
		"CU":             {CU, []byte(`"CU"`), nil},
		"CV":             {CV, []byte(`"CV"`), nil},
		"CW":             {CW, []byte(`"CW"`), nil},
		"CX":             {CX, []byte(`"CX"`), nil},
		"CY":             {CY, []byte(`"CY"`), nil},
		"CZ":             {CZ, []byte(`"CZ"`), nil},
		"DE":             {DE, []byte(`"DE"`), nil},
		"DJ":             {DJ, []byte(`"DJ"`), nil},
		"DK":             {DK, []byte(`"DK"`), nil},
		"DM":             {DM, []byte(`"DM"`), nil},
		"DO":             {DO, []byte(`"DO"`), nil},
		"DZ":             {DZ, []byte(`"DZ"`), nil},
		"EC":             {EC, []byte(`"EC"`), nil},
		"EE":             {EE, []byte(`"EE"`), nil},
		"EG":             {EG, []byte(`"EG"`), nil},
		"EH":             {EH, []byte(`"EH"`), nil},
		"ER":             {ER, []byte(`"ER"`), nil},
		"ES":             {ES, []byte(`"ES"`), nil},
		"ET":             {ET, []byte(`"ET"`), nil},
		"FI":             {FI, []byte(`"FI"`), nil},
		"FJ":             {FJ, []byte(`"FJ"`), nil},
		"FK":             {FK, []byte(`"FK"`), nil},
		"FM":             {FM, []byte(`"FM"`), nil},
		"FO":             {FO, []byte(`"FO"`), nil},
		"FR":             {FR, []byte(`"FR"`), nil},
		"GA":             {GA, []byte(`"GA"`), nil},
		"GB":             {GB, []byte(`"GB"`), nil},
		"GD":             {GD, []byte(`"GD"`), nil},
		"GE":             {GE, []byte(`"GE"`), nil},
		"GF":             {GF, []byte(`"GF"`), nil},
		"GG":             {GG, []byte(`"GG"`), nil},
		"GH":             {GH, []byte(`"GH"`), nil},
		"GI":             {GI, []byte(`"GI"`), nil},
		"GL":             {GL, []byte(`"GL"`), nil},
		"GM":             {GM, []byte(`"GM"`), nil},
		"GN":             {GN, []byte(`"GN"`), nil},
		"GP":             {GP, []byte(`"GP"`), nil},
		"GQ":             {GQ, []byte(`"GQ"`), nil},
		"GR":             {GR, []byte(`"GR"`), nil},
		"GS":             {GS, []byte(`"GS"`), nil},
		"GT":             {GT, []byte(`"GT"`), nil},
		"GU":             {GU, []byte(`"GU"`), nil},
		"GW":             {GW, []byte(`"GW"`), nil},
		"GY":             {GY, []byte(`"GY"`), nil},
		"HK":             {HK, []byte(`"HK"`), nil},
		"HM":             {HM, []byte(`"HM"`), nil},
		"HN":             {HN, []byte(`"HN"`), nil},
		"HR":             {HR, []byte(`"HR"`), nil},
		"HT":             {HT, []byte(`"HT"`), nil},
		"HU":             {HU, []byte(`"HU"`), nil},
		"ID":             {ID, []byte(`"ID"`), nil},
		"IE":             {IE, []byte(`"IE"`), nil},
		"IL":             {IL, []byte(`"IL"`), nil},
		"IM":             {IM, []byte(`"IM"`), nil},
		"IN":             {IN, []byte(`"IN"`), nil},
		"IO":             {IO, []byte(`"IO"`), nil},
		"IQ":             {IQ, []byte(`"IQ"`), nil},
		"IR":             {IR, []byte(`"IR"`), nil},
		"IS":             {IS, []byte(`"IS"`), nil},
		"IT":             {IT, []byte(`"IT"`), nil},
		"JE":             {JE, []byte(`"JE"`), nil},
		"JM":             {JM, []byte(`"JM"`), nil},
		"JO":             {JO, []byte(`"JO"`), nil},
		"JP":             {JP, []byte(`"JP"`), nil},
		"KE":             {KE, []byte(`"KE"`), nil},
		"KG":             {KG, []byte(`"KG"`), nil},
		"KH":             {KH, []byte(`"KH"`), nil},
		"KI":             {KI, []byte(`"KI"`), nil},
		"KM":             {KM, []byte(`"KM"`), nil},
		"KN":             {KN, []byte(`"KN"`), nil},
		"KP":             {KP, []byte(`"KP"`), nil},
		"KR":             {KR, []byte(`"KR"`), nil},
		"KW":             {KW, []byte(`"KW"`), nil},
		"KY":             {KY, []byte(`"KY"`), nil},
		"KZ":             {KZ, []byte(`"KZ"`), nil},
		"LA":             {LA, []byte(`"LA"`), nil},
		"LB":             {LB, []byte(`"LB"`), nil},
		"LC":             {LC, []byte(`"LC"`), nil},
		"LI":             {LI, []byte(`"LI"`), nil},
		"LK":             {LK, []byte(`"LK"`), nil},
		"LR":             {LR, []byte(`"LR"`), nil},
		"LS":             {LS, []byte(`"LS"`), nil},
		"LT":             {LT, []byte(`"LT"`), nil},
		"LU":             {LU, []byte(`"LU"`), nil},
		"LV":             {LV, []byte(`"LV"`), nil},
		"LY":             {LY, []byte(`"LY"`), nil},
		"MA":             {MA, []byte(`"MA"`), nil},
		"MC":             {MC, []byte(`"MC"`), nil},
		"MD":             {MD, []byte(`"MD"`), nil},
		"ME":             {ME, []byte(`"ME"`), nil},
		"MF":             {MF, []byte(`"MF"`), nil},
		"MG":             {MG, []byte(`"MG"`), nil},
		"MH":             {MH, []byte(`"MH"`), nil},
		"MK":             {MK, []byte(`"MK"`), nil},
		"ML":             {ML, []byte(`"ML"`), nil},
		"MM":             {MM, []byte(`"MM"`), nil},
		"MN":             {MN, []byte(`"MN"`), nil},
		"MO":             {MO, []byte(`"MO"`), nil},
		"MP":             {MP, []byte(`"MP"`), nil},
		"MQ":             {MQ, []byte(`"MQ"`), nil},
		"MR":             {MR, []byte(`"MR"`), nil},
		"MS":             {MS, []byte(`"MS"`), nil},
		"MT":             {MT, []byte(`"MT"`), nil},
		"MU":             {MU, []byte(`"MU"`), nil},
		"MV":             {MV, []byte(`"MV"`), nil},
		"MW":             {MW, []byte(`"MW"`), nil},
		"MX":             {MX, []byte(`"MX"`), nil},
		"MY":             {MY, []byte(`"MY"`), nil},
		"MZ":             {MZ, []byte(`"MZ"`), nil},
		"NA":             {NA, []byte(`"NA"`), nil},
		"NC":             {NC, []byte(`"NC"`), nil},
		"NE":             {NE, []byte(`"NE"`), nil},
		"NF":             {NF, []byte(`"NF"`), nil},
		"NG":             {NG, []byte(`"NG"`), nil},
		"NI":             {NI, []byte(`"NI"`), nil},
		"NL":             {NL, []byte(`"NL"`), nil},
		"NO":             {NO, []byte(`"NO"`), nil},
		"NP":             {NP, []byte(`"NP"`), nil},
		"NR":             {NR, []byte(`"NR"`), nil},
		"NU":             {NU, []byte(`"NU"`), nil},
		"NZ":             {NZ, []byte(`"NZ"`), nil},
		"OM":             {OM, []byte(`"OM"`), nil},
		"PA":             {PA, []byte(`"PA"`), nil},
		"PE":             {PE, []byte(`"PE"`), nil},
		"PF":             {PF, []byte(`"PF"`), nil},
		"PG":             {PG, []byte(`"PG"`), nil},
		"PH":             {PH, []byte(`"PH"`), nil},
		"PK":             {PK, []byte(`"PK"`), nil},
		"PL":             {PL, []byte(`"PL"`), nil},
		"PM":             {PM, []byte(`"PM"`), nil},
		"PN":             {PN, []byte(`"PN"`), nil},
		"PR":             {PR, []byte(`"PR"`), nil},
		"PS":             {PS, []byte(`"PS"`), nil},
		"PT":             {PT, []byte(`"PT"`), nil},
		"PW":             {PW, []byte(`"PW"`), nil},
		"PY":             {PY, []byte(`"PY"`), nil},
		"QA":             {QA, []byte(`"QA"`), nil},
		"RE":             {RE, []byte(`"RE"`), nil},
		"RO":             {RO, []byte(`"RO"`), nil},
		"RS":             {RS, []byte(`"RS"`), nil},
		"RU":             {RU, []byte(`"RU"`), nil},
		"RW":             {RW, []byte(`"RW"`), nil},
		"SA":             {SA, []byte(`"SA"`), nil},
		"SB":             {SB, []byte(`"SB"`), nil},
		"SC":             {SC, []byte(`"SC"`), nil},
		"SD":             {SD, []byte(`"SD"`), nil},
		"SE":             {SE, []byte(`"SE"`), nil},
		"SG":             {SG, []byte(`"SG"`), nil},
		"SH":             {SH, []byte(`"SH"`), nil},
		"SI":             {SI, []byte(`"SI"`), nil},
		"SJ":             {SJ, []byte(`"SJ"`), nil},
		"SK":             {SK, []byte(`"SK"`), nil},
		"SL":             {SL, []byte(`"SL"`), nil},
		"SM":             {SM, []byte(`"SM"`), nil},
		"SN":             {SN, []byte(`"SN"`), nil},
		"SO":             {SO, []byte(`"SO"`), nil},
		"SR":             {SR, []byte(`"SR"`), nil},
		"SS":             {SS, []byte(`"SS"`), nil},
		"ST":             {ST, []byte(`"ST"`), nil},
		"SV":             {SV, []byte(`"SV"`), nil},
		"SX":             {SX, []byte(`"SX"`), nil},
		"SY":             {SY, []byte(`"SY"`), nil},
		"SZ":             {SZ, []byte(`"SZ"`), nil},
		"TC":             {TC, []byte(`"TC"`), nil},
		"TD":             {TD, []byte(`"TD"`), nil},
		"TF":             {TF, []byte(`"TF"`), nil},
		"TG":             {TG, []byte(`"TG"`), nil},
		"TH":             {TH, []byte(`"TH"`), nil},
		"TJ":             {TJ, []byte(`"TJ"`), nil},
		"TK":             {TK, []byte(`"TK"`), nil},
		"TL":             {TL, []byte(`"TL"`), nil},
		"TM":             {TM, []byte(`"TM"`), nil},
		"TN":             {TN, []byte(`"TN"`), nil},
		"TO":             {TO, []byte(`"TO"`), nil},
		"TR":             {TR, []byte(`"TR"`), nil},
		"TT":             {TT, []byte(`"TT"`), nil},
		"TV":             {TV, []byte(`"TV"`), nil},
		"TW":             {TW, []byte(`"TW"`), nil},
		"TZ":             {TZ, []byte(`"TZ"`), nil},
		"UA":             {UA, []byte(`"UA"`), nil},
		"UG":             {UG, []byte(`"UG"`), nil},
		"UM":             {UM, []byte(`"UM"`), nil},
		"US":             {US, []byte(`"US"`), nil},
		"UY":             {UY, []byte(`"UY"`), nil},
		"UZ":             {UZ, []byte(`"UZ"`), nil},
		"VA":             {VA, []byte(`"VA"`), nil},
		"VC":             {VC, []byte(`"VC"`), nil},
		"VE":             {VE, []byte(`"VE"`), nil},
		"VG":             {VG, []byte(`"VG"`), nil},
		"VI":             {VI, []byte(`"VI"`), nil},
		"VN":             {VN, []byte(`"VN"`), nil},
		"VU":             {VU, []byte(`"VU"`), nil},
		"WF":             {WF, []byte(`"WF"`), nil},
		"WS":             {WS, []byte(`"WS"`), nil},
		"YE":             {YE, []byte(`"YE"`), nil},
		"YT":             {YT, []byte(`"YT"`), nil},
		"ZA":             {ZA, []byte(`"ZA"`), nil},
		"ZM":             {ZM, []byte(`"ZM"`), nil},
		"ZW":             {ZW, []byte(`"ZW"`), nil},
	}

	for name, tc := range tests {
		t.Run(name, func(t *testing.T) {
			got, err := tc.code.MarshalJSON()
			if tc.wantErr != nil {
				if !reflect.DeepEqual(tc.wantErr, err) {
					t.Errorf("MarshalJSON() error = %v, wantErr %v", err, tc.wantErr)
				}
			} else {
				if !reflect.DeepEqual(got, tc.want) {
					t.Errorf("MarshalJSON() got = %v, want %v", got, tc.want)
				}
			}
		})
	}
}

func TestCountryCode_MarshalText(t *testing.T) {
	type tcase struct {
		code    CountryCode
		want    []byte
		wantErr error
	}

	tests := map[string]tcase{
		"AD": {AD, []byte(`"AD"`), nil},
		"AE": {AE, []byte(`"AE"`), nil},
		"AF": {AF, []byte(`"AF"`), nil},
		"AG": {AG, []byte(`"AG"`), nil},
		"AI": {AI, []byte(`"AI"`), nil},
		"AL": {AL, []byte(`"AL"`), nil},
		"AM": {AM, []byte(`"AM"`), nil},
		"AO": {AO, []byte(`"AO"`), nil},
		"AQ": {AQ, []byte(`"AQ"`), nil},
		"AR": {AR, []byte(`"AR"`), nil},
		"AS": {AS, []byte(`"AS"`), nil},
		"AT": {AT, []byte(`"AT"`), nil},
		"AU": {AU, []byte(`"AU"`), nil},
		"AW": {AW, []byte(`"AW"`), nil},
		"AX": {AX, []byte(`"AX"`), nil},
		"AZ": {AZ, []byte(`"AZ"`), nil},
		"BA": {BA, []byte(`"BA"`), nil},
		"BB": {BB, []byte(`"BB"`), nil},
		"BD": {BD, []byte(`"BD"`), nil},
		"BE": {BE, []byte(`"BE"`), nil},
		"BF": {BF, []byte(`"BF"`), nil},
		"BG": {BG, []byte(`"BG"`), nil},
		"BH": {BH, []byte(`"BH"`), nil},
		"BI": {BI, []byte(`"BI"`), nil},
		"BJ": {BJ, []byte(`"BJ"`), nil},
		"BL": {BL, []byte(`"BL"`), nil},
		"BM": {BM, []byte(`"BM"`), nil},
		"BN": {BN, []byte(`"BN"`), nil},
		"BO": {BO, []byte(`"BO"`), nil},
		"BQ": {BQ, []byte(`"BQ"`), nil},
		"BR": {BR, []byte(`"BR"`), nil},
		"BS": {BS, []byte(`"BS"`), nil},
		"BT": {BT, []byte(`"BT"`), nil},
		"BV": {BV, []byte(`"BV"`), nil},
		"BW": {BW, []byte(`"BW"`), nil},
		"BY": {BY, []byte(`"BY"`), nil},
		"BZ": {BZ, []byte(`"BZ"`), nil},
		"CA": {CA, []byte(`"CA"`), nil},
		"CC": {CC, []byte(`"CC"`), nil},
		"CD": {CD, []byte(`"CD"`), nil},
		"CF": {CF, []byte(`"CF"`), nil},
		"CG": {CG, []byte(`"CG"`), nil},
		"CH": {CH, []byte(`"CH"`), nil},
		"CI": {CI, []byte(`"CI"`), nil},
		"CK": {CK, []byte(`"CK"`), nil},
		"CL": {CL, []byte(`"CL"`), nil},
		"CM": {CM, []byte(`"CM"`), nil},
		"CN": {CN, []byte(`"CN"`), nil},
		"CO": {CO, []byte(`"CO"`), nil},
		"CR": {CR, []byte(`"CR"`), nil},
		"CU": {CU, []byte(`"CU"`), nil},
		"CV": {CV, []byte(`"CV"`), nil},
		"CW": {CW, []byte(`"CW"`), nil},
		"CX": {CX, []byte(`"CX"`), nil},
		"CY": {CY, []byte(`"CY"`), nil},
		"CZ": {CZ, []byte(`"CZ"`), nil},
		"DE": {DE, []byte(`"DE"`), nil},
		"DJ": {DJ, []byte(`"DJ"`), nil},
		"DK": {DK, []byte(`"DK"`), nil},
		"DM": {DM, []byte(`"DM"`), nil},
		"DO": {DO, []byte(`"DO"`), nil},
		"DZ": {DZ, []byte(`"DZ"`), nil},
		"EC": {EC, []byte(`"EC"`), nil},
		"EE": {EE, []byte(`"EE"`), nil},
		"EG": {EG, []byte(`"EG"`), nil},
		"EH": {EH, []byte(`"EH"`), nil},
		"ER": {ER, []byte(`"ER"`), nil},
		"ES": {ES, []byte(`"ES"`), nil},
		"ET": {ET, []byte(`"ET"`), nil},
		"FI": {FI, []byte(`"FI"`), nil},
		"FJ": {FJ, []byte(`"FJ"`), nil},
		"FK": {FK, []byte(`"FK"`), nil},
		"FM": {FM, []byte(`"FM"`), nil},
		"FO": {FO, []byte(`"FO"`), nil},
		"FR": {FR, []byte(`"FR"`), nil},
		"GA": {GA, []byte(`"GA"`), nil},
		"GB": {GB, []byte(`"GB"`), nil},
		"GD": {GD, []byte(`"GD"`), nil},
		"GE": {GE, []byte(`"GE"`), nil},
		"GF": {GF, []byte(`"GF"`), nil},
		"GG": {GG, []byte(`"GG"`), nil},
		"GH": {GH, []byte(`"GH"`), nil},
		"GI": {GI, []byte(`"GI"`), nil},
		"GL": {GL, []byte(`"GL"`), nil},
		"GM": {GM, []byte(`"GM"`), nil},
		"GN": {GN, []byte(`"GN"`), nil},
		"GP": {GP, []byte(`"GP"`), nil},
		"GQ": {GQ, []byte(`"GQ"`), nil},
		"GR": {GR, []byte(`"GR"`), nil},
		"GS": {GS, []byte(`"GS"`), nil},
		"GT": {GT, []byte(`"GT"`), nil},
		"GU": {GU, []byte(`"GU"`), nil},
		"GW": {GW, []byte(`"GW"`), nil},
		"GY": {GY, []byte(`"GY"`), nil},
		"HK": {HK, []byte(`"HK"`), nil},
		"HM": {HM, []byte(`"HM"`), nil},
		"HN": {HN, []byte(`"HN"`), nil},
		"HR": {HR, []byte(`"HR"`), nil},
		"HT": {HT, []byte(`"HT"`), nil},
		"HU": {HU, []byte(`"HU"`), nil},
		"ID": {ID, []byte(`"ID"`), nil},
		"IE": {IE, []byte(`"IE"`), nil},
		"IL": {IL, []byte(`"IL"`), nil},
		"IM": {IM, []byte(`"IM"`), nil},
		"IN": {IN, []byte(`"IN"`), nil},
		"IO": {IO, []byte(`"IO"`), nil},
		"IQ": {IQ, []byte(`"IQ"`), nil},
		"IR": {IR, []byte(`"IR"`), nil},
		"IS": {IS, []byte(`"IS"`), nil},
		"IT": {IT, []byte(`"IT"`), nil},
		"JE": {JE, []byte(`"JE"`), nil},
		"JM": {JM, []byte(`"JM"`), nil},
		"JO": {JO, []byte(`"JO"`), nil},
		"JP": {JP, []byte(`"JP"`), nil},
		"KE": {KE, []byte(`"KE"`), nil},
		"KG": {KG, []byte(`"KG"`), nil},
		"KH": {KH, []byte(`"KH"`), nil},
		"KI": {KI, []byte(`"KI"`), nil},
		"KM": {KM, []byte(`"KM"`), nil},
		"KN": {KN, []byte(`"KN"`), nil},
		"KP": {KP, []byte(`"KP"`), nil},
		"KR": {KR, []byte(`"KR"`), nil},
		"KW": {KW, []byte(`"KW"`), nil},
		"KY": {KY, []byte(`"KY"`), nil},
		"KZ": {KZ, []byte(`"KZ"`), nil},
		"LA": {LA, []byte(`"LA"`), nil},
		"LB": {LB, []byte(`"LB"`), nil},
		"LC": {LC, []byte(`"LC"`), nil},
		"LI": {LI, []byte(`"LI"`), nil},
		"LK": {LK, []byte(`"LK"`), nil},
		"LR": {LR, []byte(`"LR"`), nil},
		"LS": {LS, []byte(`"LS"`), nil},
		"LT": {LT, []byte(`"LT"`), nil},
		"LU": {LU, []byte(`"LU"`), nil},
		"LV": {LV, []byte(`"LV"`), nil},
		"LY": {LY, []byte(`"LY"`), nil},
		"MA": {MA, []byte(`"MA"`), nil},
		"MC": {MC, []byte(`"MC"`), nil},
		"MD": {MD, []byte(`"MD"`), nil},
		"ME": {ME, []byte(`"ME"`), nil},
		"MF": {MF, []byte(`"MF"`), nil},
		"MG": {MG, []byte(`"MG"`), nil},
		"MH": {MH, []byte(`"MH"`), nil},
		"MK": {MK, []byte(`"MK"`), nil},
		"ML": {ML, []byte(`"ML"`), nil},
		"MM": {MM, []byte(`"MM"`), nil},
		"MN": {MN, []byte(`"MN"`), nil},
		"MO": {MO, []byte(`"MO"`), nil},
		"MP": {MP, []byte(`"MP"`), nil},
		"MQ": {MQ, []byte(`"MQ"`), nil},
		"MR": {MR, []byte(`"MR"`), nil},
		"MS": {MS, []byte(`"MS"`), nil},
		"MT": {MT, []byte(`"MT"`), nil},
		"MU": {MU, []byte(`"MU"`), nil},
		"MV": {MV, []byte(`"MV"`), nil},
		"MW": {MW, []byte(`"MW"`), nil},
		"MX": {MX, []byte(`"MX"`), nil},
		"MY": {MY, []byte(`"MY"`), nil},
		"MZ": {MZ, []byte(`"MZ"`), nil},
		"NA": {NA, []byte(`"NA"`), nil},
		"NC": {NC, []byte(`"NC"`), nil},
		"NE": {NE, []byte(`"NE"`), nil},
		"NF": {NF, []byte(`"NF"`), nil},
		"NG": {NG, []byte(`"NG"`), nil},
		"NI": {NI, []byte(`"NI"`), nil},
		"NL": {NL, []byte(`"NL"`), nil},
		"NO": {NO, []byte(`"NO"`), nil},
		"NP": {NP, []byte(`"NP"`), nil},
		"NR": {NR, []byte(`"NR"`), nil},
		"NU": {NU, []byte(`"NU"`), nil},
		"NZ": {NZ, []byte(`"NZ"`), nil},
		"OM": {OM, []byte(`"OM"`), nil},
		"PA": {PA, []byte(`"PA"`), nil},
		"PE": {PE, []byte(`"PE"`), nil},
		"PF": {PF, []byte(`"PF"`), nil},
		"PG": {PG, []byte(`"PG"`), nil},
		"PH": {PH, []byte(`"PH"`), nil},
		"PK": {PK, []byte(`"PK"`), nil},
		"PL": {PL, []byte(`"PL"`), nil},
		"PM": {PM, []byte(`"PM"`), nil},
		"PN": {PN, []byte(`"PN"`), nil},
		"PR": {PR, []byte(`"PR"`), nil},
		"PS": {PS, []byte(`"PS"`), nil},
		"PT": {PT, []byte(`"PT"`), nil},
		"PW": {PW, []byte(`"PW"`), nil},
		"PY": {PY, []byte(`"PY"`), nil},
		"QA": {QA, []byte(`"QA"`), nil},
		"RE": {RE, []byte(`"RE"`), nil},
		"RO": {RO, []byte(`"RO"`), nil},
		"RS": {RS, []byte(`"RS"`), nil},
		"RU": {RU, []byte(`"RU"`), nil},
		"RW": {RW, []byte(`"RW"`), nil},
		"SA": {SA, []byte(`"SA"`), nil},
		"SB": {SB, []byte(`"SB"`), nil},
		"SC": {SC, []byte(`"SC"`), nil},
		"SD": {SD, []byte(`"SD"`), nil},
		"SE": {SE, []byte(`"SE"`), nil},
		"SG": {SG, []byte(`"SG"`), nil},
		"SH": {SH, []byte(`"SH"`), nil},
		"SI": {SI, []byte(`"SI"`), nil},
		"SJ": {SJ, []byte(`"SJ"`), nil},
		"SK": {SK, []byte(`"SK"`), nil},
		"SL": {SL, []byte(`"SL"`), nil},
		"SM": {SM, []byte(`"SM"`), nil},
		"SN": {SN, []byte(`"SN"`), nil},
		"SO": {SO, []byte(`"SO"`), nil},
		"SR": {SR, []byte(`"SR"`), nil},
		"SS": {SS, []byte(`"SS"`), nil},
		"ST": {ST, []byte(`"ST"`), nil},
		"SV": {SV, []byte(`"SV"`), nil},
		"SX": {SX, []byte(`"SX"`), nil},
		"SY": {SY, []byte(`"SY"`), nil},
		"SZ": {SZ, []byte(`"SZ"`), nil},
		"TC": {TC, []byte(`"TC"`), nil},
		"TD": {TD, []byte(`"TD"`), nil},
		"TF": {TF, []byte(`"TF"`), nil},
		"TG": {TG, []byte(`"TG"`), nil},
		"TH": {TH, []byte(`"TH"`), nil},
		"TJ": {TJ, []byte(`"TJ"`), nil},
		"TK": {TK, []byte(`"TK"`), nil},
		"TL": {TL, []byte(`"TL"`), nil},
		"TM": {TM, []byte(`"TM"`), nil},
		"TN": {TN, []byte(`"TN"`), nil},
		"TO": {TO, []byte(`"TO"`), nil},
		"TR": {TR, []byte(`"TR"`), nil},
		"TT": {TT, []byte(`"TT"`), nil},
		"TV": {TV, []byte(`"TV"`), nil},
		"TW": {TW, []byte(`"TW"`), nil},
		"TZ": {TZ, []byte(`"TZ"`), nil},
		"UA": {UA, []byte(`"UA"`), nil},
		"UG": {UG, []byte(`"UG"`), nil},
		"UM": {UM, []byte(`"UM"`), nil},
		"US": {US, []byte(`"US"`), nil},
		"UY": {UY, []byte(`"UY"`), nil},
		"UZ": {UZ, []byte(`"UZ"`), nil},
		"VA": {VA, []byte(`"VA"`), nil},
		"VC": {VC, []byte(`"VC"`), nil},
		"VE": {VE, []byte(`"VE"`), nil},
		"VG": {VG, []byte(`"VG"`), nil},
		"VI": {VI, []byte(`"VI"`), nil},
		"VN": {VN, []byte(`"VN"`), nil},
		"VU": {VU, []byte(`"VU"`), nil},
		"WF": {WF, []byte(`"WF"`), nil},
		"WS": {WS, []byte(`"WS"`), nil},
		"YE": {YE, []byte(`"YE"`), nil},
		"YT": {YT, []byte(`"YT"`), nil},
		"ZA": {ZA, []byte(`"ZA"`), nil},
		"ZM": {ZM, []byte(`"ZM"`), nil},
		"ZW": {ZW, []byte(`"ZW"`), nil},
	}

	for name, tc := range tests {
		t.Run(name, func(t *testing.T) {
			got, err := tc.code.MarshalText()
			if tc.wantErr != nil {
				if !reflect.DeepEqual(tc.wantErr, err) {
					t.Errorf("MarshalText() error = %v, wantErr %v", err, tc.wantErr)
				}
			} else {
				if !reflect.DeepEqual(got, tc.want) {
					t.Errorf("MarshalText() got = %v, want %v", got, tc.want)
				}
			}
		})
	}
}

func TestCountryCode_Name(t *testing.T) {
	type tcase struct {
		code CountryCode
		want string
	}

	tests := map[string]tcase{
		"AD": {AD, "Andorra"},
		"AE": {AE, "United Arab Emirates"},
		"AF": {AF, "Afghanistan"},
		"AG": {AG, "Antigua and Barbuda"},
		"AI": {AI, "Anguilla"},
		"AL": {AL, "Albania"},
		"AM": {AM, "Armenia"},
		"AO": {AO, "Angola"},
		"AQ": {AQ, "Antarctica"},
		"AR": {AR, "Argentina"},
		"AS": {AS, "American Samoa"},
		"AT": {AT, "Austria"},
		"AU": {AU, "Australia"},
		"AW": {AW, "Aruba"},
		"AX": {AX, "Ã…land Islands"},
		"AZ": {AZ, "Azerbaijan"},
		"BA": {BA, "Bosnia and Herzegovina"},
		"BB": {BB, "Barbados"},
		"BD": {BD, "Bangladesh"},
		"BE": {BE, "Belgium"},
		"BF": {BF, "Burkina Faso"},
		"BG": {BG, "Bulgaria"},
		"BH": {BH, "Bahrain"},
		"BI": {BI, "Burundi"},
		"BJ": {BJ, "Benin"},
		"BL": {BL, "Saint BarthÃ©lemy"},
		"BM": {BM, "Bermuda"},
		"BN": {BN, "Brunei Darussalam"},
		"BO": {BO, "Bolivia (Plurinational State of)"},
		"BQ": {BQ, "Bonaire, Sint Eustatius and Saba"},
		"BR": {BR, "Brazil"},
		"BS": {BS, "Bahamas"},
		"BT": {BT, "Bhutan"},
		"BV": {BV, "Bouvet Island"},
		"BW": {BW, "Botswana"},
		"BY": {BY, "Belarus"},
		"BZ": {BZ, "Belize"},
		"CA": {CA, "Canada"},
		"CC": {CC, "Cocos (Keeling) Islands"},
		"CD": {CD, "Congo, Democratic Republic of the"},
		"CF": {CF, "Central African Republic"},
		"CG": {CG, "Congo"},
		"CH": {CH, "Switzerland"},
		"CI": {CI, "CÃ´te d'Ivoire"},
		"CK": {CK, "Cook Islands"},
		"CL": {CL, "Chile"},
		"CM": {CM, "Cameroon"},
		"CN": {CN, "China"},
		"CO": {CO, "Colombia"},
		"CR": {CR, "Costa Rica"},
		"CU": {CU, "Cuba"},
		"CV": {CV, "Cabo Verde"},
		"CW": {CW, "CuraÃ§ao"},
		"CX": {CX, "Christmas Island"},
		"CY": {CY, "Cyprus"},
		"CZ": {CZ, "Czechia"},
		"DE": {DE, "Germany"},
		"DJ": {DJ, "Djibouti"},
		"DK": {DK, "Denmark"},
		"DM": {DM, "Dominica"},
		"DO": {DO, "Dominican Republic"},
		"DZ": {DZ, "Algeria"},
		"EC": {EC, "Ecuador"},
		"EE": {EE, "Estonia"},
		"EG": {EG, "Egypt"},
		"EH": {EH, "Western Sahara"},
		"ER": {ER, "Eritrea"},
		"ES": {ES, "Spain"},
		"ET": {ET, "Ethiopia"},
		"FI": {FI, "Finland"},
		"FJ": {FJ, "Fiji"},
		"FK": {FK, "Falkland Islands (Malvinas)"},
		"FM": {FM, "Micronesia (Federated States of)"},
		"FO": {FO, "Faroe Islands"},
		"FR": {FR, "France"},
		"GA": {GA, "Gabon"},
		"GB": {GB, "United Kingdom of Great Britain and Northern Ireland"},
		"GD": {GD, "Grenada"},
		"GE": {GE, "Georgia"},
		"GF": {GF, "French Guiana"},
		"GG": {GG, "Guernsey"},
		"GH": {GH, "Ghana"},
		"GI": {GI, "Gibraltar"},
		"GL": {GL, "Greenland"},
		"GM": {GM, "Gambia"},
		"GN": {GN, "Guinea"},
		"GP": {GP, "Guadeloupe"},
		"GQ": {GQ, "Equatorial Guinea"},
		"GR": {GR, "Greece"},
		"GS": {GS, "South Georgia and the South Sandwich Islands"},
		"GT": {GT, "Guatemala"},
		"GU": {GU, "Guam"},
		"GW": {GW, "Guinea-Bissau"},
		"GY": {GY, "Guyana"},
		"HK": {HK, "Hong Kong"},
		"HM": {HM, "Heard Island and McDonald Islands"},
		"HN": {HN, "Honduras"},
		"HR": {HR, "Croatia"},
		"HT": {HT, "Haiti"},
		"HU": {HU, "Hungary"},
		"ID": {ID, "Indonesia"},
		"IE": {IE, "Ireland"},
		"IL": {IL, "Israel"},
		"IM": {IM, "Isle of Man"},
		"IN": {IN, "India"},
		"IO": {IO, "British Indian Ocean Territory"},
		"IQ": {IQ, "Iraq"},
		"IR": {IR, "Iran (Islamic Republic of)"},
		"IS": {IS, "Iceland"},
		"IT": {IT, "Italy"},
		"JE": {JE, "Jersey"},
		"JM": {JM, "Jamaica"},
		"JO": {JO, "Jordan"},
		"JP": {JP, "Japan"},
		"KE": {KE, "Kenya"},
		"KG": {KG, "Kyrgyzstan"},
		"KH": {KH, "Cambodia"},
		"KI": {KI, "Kiribati"},
		"KM": {KM, "Comoros"},
		"KN": {KN, "Saint Kitts and Nevis"},
		"KP": {KP, "Korea (Democratic People's Republic of)"},
		"KR": {KR, "Korea, Republic of"},
		"KW": {KW, "Kuwait"},
		"KY": {KY, "Cayman Islands"},
		"KZ": {KZ, "Kazakhstan"},
		"LA": {LA, "Lao People's Democratic Republic"},
		"LB": {LB, "Lebanon"},
		"LC": {LC, "Saint Lucia"},
		"LI": {LI, "Liechtenstein"},
		"LK": {LK, "Sri Lanka"},
		"LR": {LR, "Liberia"},
		"LS": {LS, "Lesotho"},
		"LT": {LT, "Lithuania"},
		"LU": {LU, "Luxembourg"},
		"LV": {LV, "Latvia"},
		"LY": {LY, "Libya"},
		"MA": {MA, "Morocco"},
		"MC": {MC, "Monaco"},
		"MD": {MD, "Moldova, Republic of"},
		"ME": {ME, "Montenegro"},
		"MF": {MF, "Saint Martin (French part)"},
		"MG": {MG, "Madagascar"},
		"MH": {MH, "Marshall Islands"},
		"MK": {MK, "North Macedonia"},
		"ML": {ML, "Mali"},
		"MM": {MM, "Myanmar"},
		"MN": {MN, "Mongolia"},
		"MO": {MO, "Macao"},
		"MP": {MP, "Northern Mariana Islands"},
		"MQ": {MQ, "Martinique"},
		"MR": {MR, "Mauritania"},
		"MS": {MS, "Montserrat"},
		"MT": {MT, "Malta"},
		"MU": {MU, "Mauritius"},
		"MV": {MV, "Maldives"},
		"MW": {MW, "Malawi"},
		"MX": {MX, "Mexico"},
		"MY": {MY, "Malaysia"},
		"MZ": {MZ, "Mozambique"},
		"NA": {NA, "Namibia"},
		"NC": {NC, "New Caledonia"},
		"NE": {NE, "Niger"},
		"NF": {NF, "Norfolk Island"},
		"NG": {NG, "Nigeria"},
		"NI": {NI, "Nicaragua"},
		"NL": {NL, "Netherlands"},
		"NO": {NO, "Norway"},
		"NP": {NP, "Nepal"},
		"NR": {NR, "Nauru"},
		"NU": {NU, "Niue"},
		"NZ": {NZ, "New Zealand"},
		"OM": {OM, "Oman"},
		"PA": {PA, "Panama"},
		"PE": {PE, "Peru"},
		"PF": {PF, "French Polynesia"},
		"PG": {PG, "Papua New Guinea"},
		"PH": {PH, "Philippines"},
		"PK": {PK, "Pakistan"},
		"PL": {PL, "Poland"},
		"PM": {PM, "Saint Pierre and Miquelon"},
		"PN": {PN, "Pitcairn"},
		"PR": {PR, "Puerto Rico"},
		"PS": {PS, "Palestine, State of"},
		"PT": {PT, "Portugal"},
		"PW": {PW, "Palau"},
		"PY": {PY, "Paraguay"},
		"QA": {QA, "Qatar"},
		"RE": {RE, "RÃ©union"},
		"RO": {RO, "Romania"},
		"RS": {RS, "Serbia"},
		"RU": {RU, "Russian Federation"},
		"RW": {RW, "Rwanda"},
		"SA": {SA, "Saudi Arabia"},
		"SB": {SB, "Solomon Islands"},
		"SC": {SC, "Seychelles"},
		"SD": {SD, "Sudan"},
		"SE": {SE, "Sweden"},
		"SG": {SG, "Singapore"},
		"SH": {SH, "Saint Helena, Ascension and Tristan da Cunha"},
		"SI": {SI, "Slovenia"},
		"SJ": {SJ, "Svalbard and Jan Mayen"},
		"SK": {SK, "Slovakia"},
		"SL": {SL, "Sierra Leone"},
		"SM": {SM, "San Marino"},
		"SN": {SN, "Senegal"},
		"SO": {SO, "Somalia"},
		"SR": {SR, "Suriname"},
		"SS": {SS, "South Sudan"},
		"ST": {ST, "Sao Tome and Principe"},
		"SV": {SV, "El Salvador"},
		"SX": {SX, "Sint Maarten (Dutch part)"},
		"SY": {SY, "Syrian Arab Republic"},
		"SZ": {SZ, "Eswatini"},
		"TC": {TC, "Turks and Caicos Islands"},
		"TD": {TD, "Chad"},
		"TF": {TF, "French Southern Territories"},
		"TG": {TG, "Togo"},
		"TH": {TH, "Thailand"},
		"TJ": {TJ, "Tajikistan"},
		"TK": {TK, "Tokelau"},
		"TL": {TL, "Timor-Leste"},
		"TM": {TM, "Turkmenistan"},
		"TN": {TN, "Tunisia"},
		"TO": {TO, "Tonga"},
		"TR": {TR, "Turkey"},
		"TT": {TT, "Trinidad and Tobago"},
		"TV": {TV, "Tuvalu"},
		"TW": {TW, "Taiwan, Province of China"},
		"TZ": {TZ, "Tanzania, United Republic of"},
		"UA": {UA, "Ukraine"},
		"UG": {UG, "Uganda"},
		"UM": {UM, "United States Minor Outlying Islands"},
		"US": {US, "United States of America"},
		"UY": {UY, "Uruguay"},
		"UZ": {UZ, "Uzbekistan"},
		"VA": {VA, "Holy See"},
		"VC": {VC, "Saint Vincent and the Grenadines"},
		"VE": {VE, "Venezuela (Bolivarian Republic of)"},
		"VG": {VG, "Virgin Islands (British)"},
		"VI": {VI, "Virgin Islands (U.S.)"},
		"VN": {VN, "Viet Nam"},
		"VU": {VU, "Vanuatu"},
		"WF": {WF, "Wallis and Futuna"},
		"WS": {WS, "Samoa"},
		"YE": {YE, "Yemen"},
		"YT": {YT, "Mayotte"},
		"ZA": {ZA, "South Africa"},
		"ZM": {ZM, "Zambia"},
		"ZW": {ZW, "Zimbabwe"},
	}

	for name, tc := range tests {
		t.Run(name, func(t *testing.T) {
			if got := tc.code.Name(); got != tc.want {
				t.Errorf("Name() = %v, want %v", got, tc.want)
			}
		})
	}
}

func TestCountryCode_Number(t *testing.T) {
	type tcase struct {
		code CountryCode
		want string
	}

	tests := map[string]tcase{
		"AD": {AD, "020"},
		"AE": {AE, "784"},
		"AF": {AF, "004"},
		"AG": {AG, "028"},
		"AI": {AI, "660"},
		"AL": {AL, "008"},
		"AM": {AM, "051"},
		"AO": {AO, "024"},
		"AQ": {AQ, "010"},
		"AR": {AR, "032"},
		"AS": {AS, "016"},
		"AT": {AT, "040"},
		"AU": {AU, "036"},
		"AW": {AW, "533"},
		"AX": {AX, "248"},
		"AZ": {AZ, "031"},
		"BA": {BA, "070"},
		"BB": {BB, "052"},
		"BD": {BD, "050"},
		"BE": {BE, "056"},
		"BF": {BF, "854"},
		"BG": {BG, "100"},
		"BH": {BH, "048"},
		"BI": {BI, "108"},
		"BJ": {BJ, "204"},
		"BL": {BL, "652"},
		"BM": {BM, "060"},
		"BN": {BN, "096"},
		"BO": {BO, "068"},
		"BQ": {BQ, "535"},
		"BR": {BR, "076"},
		"BS": {BS, "044"},
		"BT": {BT, "064"},
		"BV": {BV, "074"},
		"BW": {BW, "072"},
		"BY": {BY, "112"},
		"BZ": {BZ, "084"},
		"CA": {CA, "124"},
		"CC": {CC, "166"},
		"CD": {CD, "180"},
		"CF": {CF, "140"},
		"CG": {CG, "178"},
		"CH": {CH, "756"},
		"CI": {CI, "384"},
		"CK": {CK, "184"},
		"CL": {CL, "152"},
		"CM": {CM, "120"},
		"CN": {CN, "156"},
		"CO": {CO, "170"},
		"CR": {CR, "188"},
		"CU": {CU, "192"},
		"CV": {CV, "132"},
		"CW": {CW, "531"},
		"CX": {CX, "162"},
		"CY": {CY, "196"},
		"CZ": {CZ, "203"},
		"DE": {DE, "276"},
		"DJ": {DJ, "262"},
		"DK": {DK, "208"},
		"DM": {DM, "212"},
		"DO": {DO, "214"},
		"DZ": {DZ, "012"},
		"EC": {EC, "218"},
		"EE": {EE, "233"},
		"EG": {EG, "818"},
		"EH": {EH, "732"},
		"ER": {ER, "232"},
		"ES": {ES, "724"},
		"ET": {ET, "231"},
		"FI": {FI, "246"},
		"FJ": {FJ, "242"},
		"FK": {FK, "238"},
		"FM": {FM, "583"},
		"FO": {FO, "234"},
		"FR": {FR, "250"},
		"GA": {GA, "266"},
		"GB": {GB, "826"},
		"GD": {GD, "308"},
		"GE": {GE, "268"},
		"GF": {GF, "254"},
		"GG": {GG, "831"},
		"GH": {GH, "288"},
		"GI": {GI, "292"},
		"GL": {GL, "304"},
		"GM": {GM, "270"},
		"GN": {GN, "324"},
		"GP": {GP, "312"},
		"GQ": {GQ, "226"},
		"GR": {GR, "300"},
		"GS": {GS, "239"},
		"GT": {GT, "320"},
		"GU": {GU, "316"},
		"GW": {GW, "624"},
		"GY": {GY, "328"},
		"HK": {HK, "344"},
		"HM": {HM, "334"},
		"HN": {HN, "340"},
		"HR": {HR, "191"},
		"HT": {HT, "332"},
		"HU": {HU, "348"},
		"ID": {ID, "360"},
		"IE": {IE, "372"},
		"IL": {IL, "376"},
		"IM": {IM, "833"},
		"IN": {IN, "356"},
		"IO": {IO, "086"},
		"IQ": {IQ, "368"},
		"IR": {IR, "364"},
		"IS": {IS, "352"},
		"IT": {IT, "380"},
		"JE": {JE, "832"},
		"JM": {JM, "388"},
		"JO": {JO, "400"},
		"JP": {JP, "392"},
		"KE": {KE, "404"},
		"KG": {KG, "417"},
		"KH": {KH, "116"},
		"KI": {KI, "296"},
		"KM": {KM, "174"},
		"KN": {KN, "659"},
		"KP": {KP, "408"},
		"KR": {KR, "410"},
		"KW": {KW, "414"},
		"KY": {KY, "136"},
		"KZ": {KZ, "398"},
		"LA": {LA, "418"},
		"LB": {LB, "422"},
		"LC": {LC, "662"},
		"LI": {LI, "438"},
		"LK": {LK, "144"},
		"LR": {LR, "430"},
		"LS": {LS, "426"},
		"LT": {LT, "440"},
		"LU": {LU, "442"},
		"LV": {LV, "428"},
		"LY": {LY, "434"},
		"MA": {MA, "504"},
		"MC": {MC, "492"},
		"MD": {MD, "498"},
		"ME": {ME, "499"},
		"MF": {MF, "663"},
		"MG": {MG, "450"},
		"MH": {MH, "584"},
		"MK": {MK, "807"},
		"ML": {ML, "466"},
		"MM": {MM, "104"},
		"MN": {MN, "496"},
		"MO": {MO, "446"},
		"MP": {MP, "580"},
		"MQ": {MQ, "474"},
		"MR": {MR, "478"},
		"MS": {MS, "500"},
		"MT": {MT, "470"},
		"MU": {MU, "480"},
		"MV": {MV, "462"},
		"MW": {MW, "454"},
		"MX": {MX, "484"},
		"MY": {MY, "458"},
		"MZ": {MZ, "508"},
		"NA": {NA, "516"},
		"NC": {NC, "540"},
		"NE": {NE, "562"},
		"NF": {NF, "574"},
		"NG": {NG, "566"},
		"NI": {NI, "558"},
		"NL": {NL, "528"},
		"NO": {NO, "578"},
		"NP": {NP, "524"},
		"NR": {NR, "520"},
		"NU": {NU, "570"},
		"NZ": {NZ, "554"},
		"OM": {OM, "512"},
		"PA": {PA, "591"},
		"PE": {PE, "604"},
		"PF": {PF, "258"},
		"PG": {PG, "598"},
		"PH": {PH, "608"},
		"PK": {PK, "586"},
		"PL": {PL, "616"},
		"PM": {PM, "666"},
		"PN": {PN, "612"},
		"PR": {PR, "630"},
		"PS": {PS, "275"},
		"PT": {PT, "620"},
		"PW": {PW, "585"},
		"PY": {PY, "600"},
		"QA": {QA, "634"},
		"RE": {RE, "638"},
		"RO": {RO, "642"},
		"RS": {RS, "688"},
		"RU": {RU, "643"},
		"RW": {RW, "646"},
		"SA": {SA, "682"},
		"SB": {SB, "090"},
		"SC": {SC, "690"},
		"SD": {SD, "729"},
		"SE": {SE, "752"},
		"SG": {SG, "702"},
		"SH": {SH, "654"},
		"SI": {SI, "705"},
		"SJ": {SJ, "744"},
		"SK": {SK, "703"},
		"SL": {SL, "694"},
		"SM": {SM, "674"},
		"SN": {SN, "686"},
		"SO": {SO, "706"},
		"SR": {SR, "740"},
		"SS": {SS, "728"},
		"ST": {ST, "678"},
		"SV": {SV, "222"},
		"SX": {SX, "534"},
		"SY": {SY, "760"},
		"SZ": {SZ, "748"},
		"TC": {TC, "796"},
		"TD": {TD, "148"},
		"TF": {TF, "260"},
		"TG": {TG, "768"},
		"TH": {TH, "764"},
		"TJ": {TJ, "762"},
		"TK": {TK, "772"},
		"TL": {TL, "626"},
		"TM": {TM, "795"},
		"TN": {TN, "788"},
		"TO": {TO, "776"},
		"TR": {TR, "792"},
		"TT": {TT, "780"},
		"TV": {TV, "798"},
		"TW": {TW, "158"},
		"TZ": {TZ, "834"},
		"UA": {UA, "804"},
		"UG": {UG, "800"},
		"UM": {UM, "581"},
		"US": {US, "840"},
		"UY": {UY, "858"},
		"UZ": {UZ, "860"},
		"VA": {VA, "336"},
		"VC": {VC, "670"},
		"VE": {VE, "862"},
		"VG": {VG, "092"},
		"VI": {VI, "850"},
		"VN": {VN, "704"},
		"VU": {VU, "548"},
		"WF": {WF, "876"},
		"WS": {WS, "882"},
		"YE": {YE, "887"},
		"YT": {YT, "175"},
		"ZA": {ZA, "710"},
		"ZM": {ZM, "894"},
		"ZW": {ZW, "716"},
	}

	for name, tc := range tests {
		t.Run(name, func(t *testing.T) {
			if got := tc.code.Number(); got != tc.want {
				t.Errorf("Number() = %v, want %v", got, tc.want)
			}
		})
	}
}

func TestCountryCode_String(t *testing.T) {
	type tcase struct {
		code CountryCode
		want string
	}

	tests := map[string]tcase{
		"AD": {AD, "AD"},
		"AE": {AE, "AE"},
		"AF": {AF, "AF"},
		"AG": {AG, "AG"},
		"AI": {AI, "AI"},
		"AL": {AL, "AL"},
		"AM": {AM, "AM"},
		"AO": {AO, "AO"},
		"AQ": {AQ, "AQ"},
		"AR": {AR, "AR"},
		"AS": {AS, "AS"},
		"AT": {AT, "AT"},
		"AU": {AU, "AU"},
		"AW": {AW, "AW"},
		"AX": {AX, "AX"},
		"AZ": {AZ, "AZ"},
		"BA": {BA, "BA"},
		"BB": {BB, "BB"},
		"BD": {BD, "BD"},
		"BE": {BE, "BE"},
		"BF": {BF, "BF"},
		"BG": {BG, "BG"},
		"BH": {BH, "BH"},
		"BI": {BI, "BI"},
		"BJ": {BJ, "BJ"},
		"BL": {BL, "BL"},
		"BM": {BM, "BM"},
		"BN": {BN, "BN"},
		"BO": {BO, "BO"},
		"BQ": {BQ, "BQ"},
		"BR": {BR, "BR"},
		"BS": {BS, "BS"},
		"BT": {BT, "BT"},
		"BV": {BV, "BV"},
		"BW": {BW, "BW"},
		"BY": {BY, "BY"},
		"BZ": {BZ, "BZ"},
		"CA": {CA, "CA"},
		"CC": {CC, "CC"},
		"CD": {CD, "CD"},
		"CF": {CF, "CF"},
		"CG": {CG, "CG"},
		"CH": {CH, "CH"},
		"CI": {CI, "CI"},
		"CK": {CK, "CK"},
		"CL": {CL, "CL"},
		"CM": {CM, "CM"},
		"CN": {CN, "CN"},
		"CO": {CO, "CO"},
		"CR": {CR, "CR"},
		"CU": {CU, "CU"},
		"CV": {CV, "CV"},
		"CW": {CW, "CW"},
		"CX": {CX, "CX"},
		"CY": {CY, "CY"},
		"CZ": {CZ, "CZ"},
		"DE": {DE, "DE"},
		"DJ": {DJ, "DJ"},
		"DK": {DK, "DK"},
		"DM": {DM, "DM"},
		"DO": {DO, "DO"},
		"DZ": {DZ, "DZ"},
		"EC": {EC, "EC"},
		"EE": {EE, "EE"},
		"EG": {EG, "EG"},
		"EH": {EH, "EH"},
		"ER": {ER, "ER"},
		"ES": {ES, "ES"},
		"ET": {ET, "ET"},
		"FI": {FI, "FI"},
		"FJ": {FJ, "FJ"},
		"FK": {FK, "FK"},
		"FM": {FM, "FM"},
		"FO": {FO, "FO"},
		"FR": {FR, "FR"},
		"GA": {GA, "GA"},
		"GB": {GB, "GB"},
		"GD": {GD, "GD"},
		"GE": {GE, "GE"},
		"GF": {GF, "GF"},
		"GG": {GG, "GG"},
		"GH": {GH, "GH"},
		"GI": {GI, "GI"},
		"GL": {GL, "GL"},
		"GM": {GM, "GM"},
		"GN": {GN, "GN"},
		"GP": {GP, "GP"},
		"GQ": {GQ, "GQ"},
		"GR": {GR, "GR"},
		"GS": {GS, "GS"},
		"GT": {GT, "GT"},
		"GU": {GU, "GU"},
		"GW": {GW, "GW"},
		"GY": {GY, "GY"},
		"HK": {HK, "HK"},
		"HM": {HM, "HM"},
		"HN": {HN, "HN"},
		"HR": {HR, "HR"},
		"HT": {HT, "HT"},
		"HU": {HU, "HU"},
		"ID": {ID, "ID"},
		"IE": {IE, "IE"},
		"IL": {IL, "IL"},
		"IM": {IM, "IM"},
		"IN": {IN, "IN"},
		"IO": {IO, "IO"},
		"IQ": {IQ, "IQ"},
		"IR": {IR, "IR"},
		"IS": {IS, "IS"},
		"IT": {IT, "IT"},
		"JE": {JE, "JE"},
		"JM": {JM, "JM"},
		"JO": {JO, "JO"},
		"JP": {JP, "JP"},
		"KE": {KE, "KE"},
		"KG": {KG, "KG"},
		"KH": {KH, "KH"},
		"KI": {KI, "KI"},
		"KM": {KM, "KM"},
		"KN": {KN, "KN"},
		"KP": {KP, "KP"},
		"KR": {KR, "KR"},
		"KW": {KW, "KW"},
		"KY": {KY, "KY"},
		"KZ": {KZ, "KZ"},
		"LA": {LA, "LA"},
		"LB": {LB, "LB"},
		"LC": {LC, "LC"},
		"LI": {LI, "LI"},
		"LK": {LK, "LK"},
		"LR": {LR, "LR"},
		"LS": {LS, "LS"},
		"LT": {LT, "LT"},
		"LU": {LU, "LU"},
		"LV": {LV, "LV"},
		"LY": {LY, "LY"},
		"MA": {MA, "MA"},
		"MC": {MC, "MC"},
		"MD": {MD, "MD"},
		"ME": {ME, "ME"},
		"MF": {MF, "MF"},
		"MG": {MG, "MG"},
		"MH": {MH, "MH"},
		"MK": {MK, "MK"},
		"ML": {ML, "ML"},
		"MM": {MM, "MM"},
		"MN": {MN, "MN"},
		"MO": {MO, "MO"},
		"MP": {MP, "MP"},
		"MQ": {MQ, "MQ"},
		"MR": {MR, "MR"},
		"MS": {MS, "MS"},
		"MT": {MT, "MT"},
		"MU": {MU, "MU"},
		"MV": {MV, "MV"},
		"MW": {MW, "MW"},
		"MX": {MX, "MX"},
		"MY": {MY, "MY"},
		"MZ": {MZ, "MZ"},
		"NA": {NA, "NA"},
		"NC": {NC, "NC"},
		"NE": {NE, "NE"},
		"NF": {NF, "NF"},
		"NG": {NG, "NG"},
		"NI": {NI, "NI"},
		"NL": {NL, "NL"},
		"NO": {NO, "NO"},
		"NP": {NP, "NP"},
		"NR": {NR, "NR"},
		"NU": {NU, "NU"},
		"NZ": {NZ, "NZ"},
		"OM": {OM, "OM"},
		"PA": {PA, "PA"},
		"PE": {PE, "PE"},
		"PF": {PF, "PF"},
		"PG": {PG, "PG"},
		"PH": {PH, "PH"},
		"PK": {PK, "PK"},
		"PL": {PL, "PL"},
		"PM": {PM, "PM"},
		"PN": {PN, "PN"},
		"PR": {PR, "PR"},
		"PS": {PS, "PS"},
		"PT": {PT, "PT"},
		"PW": {PW, "PW"},
		"PY": {PY, "PY"},
		"QA": {QA, "QA"},
		"RE": {RE, "RE"},
		"RO": {RO, "RO"},
		"RS": {RS, "RS"},
		"RU": {RU, "RU"},
		"RW": {RW, "RW"},
		"SA": {SA, "SA"},
		"SB": {SB, "SB"},
		"SC": {SC, "SC"},
		"SD": {SD, "SD"},
		"SE": {SE, "SE"},
		"SG": {SG, "SG"},
		"SH": {SH, "SH"},
		"SI": {SI, "SI"},
		"SJ": {SJ, "SJ"},
		"SK": {SK, "SK"},
		"SL": {SL, "SL"},
		"SM": {SM, "SM"},
		"SN": {SN, "SN"},
		"SO": {SO, "SO"},
		"SR": {SR, "SR"},
		"SS": {SS, "SS"},
		"ST": {ST, "ST"},
		"SV": {SV, "SV"},
		"SX": {SX, "SX"},
		"SY": {SY, "SY"},
		"SZ": {SZ, "SZ"},
		"TC": {TC, "TC"},
		"TD": {TD, "TD"},
		"TF": {TF, "TF"},
		"TG": {TG, "TG"},
		"TH": {TH, "TH"},
		"TJ": {TJ, "TJ"},
		"TK": {TK, "TK"},
		"TL": {TL, "TL"},
		"TM": {TM, "TM"},
		"TN": {TN, "TN"},
		"TO": {TO, "TO"},
		"TR": {TR, "TR"},
		"TT": {TT, "TT"},
		"TV": {TV, "TV"},
		"TW": {TW, "TW"},
		"TZ": {TZ, "TZ"},
		"UA": {UA, "UA"},
		"UG": {UG, "UG"},
		"UM": {UM, "UM"},
		"US": {US, "US"},
		"UY": {UY, "UY"},
		"UZ": {UZ, "UZ"},
		"VA": {VA, "VA"},
		"VC": {VC, "VC"},
		"VE": {VE, "VE"},
		"VG": {VG, "VG"},
		"VI": {VI, "VI"},
		"VN": {VN, "VN"},
		"VU": {VU, "VU"},
		"WF": {WF, "WF"},
		"WS": {WS, "WS"},
		"YE": {YE, "YE"},
		"YT": {YT, "YT"},
		"ZA": {ZA, "ZA"},
		"ZM": {ZM, "ZM"},
		"ZW": {ZW, "ZW"},
	}

	for name, tc := range tests {
		t.Run(name, func(t *testing.T) {
			if got := tc.code.String(); got != tc.want {
				t.Errorf("String() = %v, want %v", got, tc.want)
			}
		})
	}
}

func TestCountryCode_UnmarshalJSON(t *testing.T) {
	type tcase struct {
		code    CountryCode
		b       []byte
		want    CountryCode
		wantErr error
	}

	tests := map[string]tcase{
		"ErrUnmarshalJSON_nil":     {0, nil, AD, ErrUnmarshalJSON},
		"ErrUnmarshalJSON_invalid": {0, []byte("A"), AD, ErrUnmarshalJSON},
		"AD":                       {0, []byte("AD"), AD, nil},
		"AE":                       {0, []byte("AE"), AE, nil},
		"AF":                       {0, []byte("AF"), AF, nil},
		"AG":                       {0, []byte("AG"), AG, nil},
		"AI":                       {0, []byte("AI"), AI, nil},
		"AL":                       {0, []byte("AL"), AL, nil},
		"AM":                       {0, []byte("AM"), AM, nil},
		"AO":                       {0, []byte("AO"), AO, nil},
		"AQ":                       {0, []byte("AQ"), AQ, nil},
		"AR":                       {0, []byte("AR"), AR, nil},
		"AS":                       {0, []byte("AS"), AS, nil},
		"AT":                       {0, []byte("AT"), AT, nil},
		"AU":                       {0, []byte("AU"), AU, nil},
		"AW":                       {0, []byte("AW"), AW, nil},
		"AX":                       {0, []byte("AX"), AX, nil},
		"AZ":                       {0, []byte("AZ"), AZ, nil},
		"BA":                       {0, []byte("BA"), BA, nil},
		"BB":                       {0, []byte("BB"), BB, nil},
		"BD":                       {0, []byte("BD"), BD, nil},
		"BE":                       {0, []byte("BE"), BE, nil},
		"BF":                       {0, []byte("BF"), BF, nil},
		"BG":                       {0, []byte("BG"), BG, nil},
		"BH":                       {0, []byte("BH"), BH, nil},
		"BI":                       {0, []byte("BI"), BI, nil},
		"BJ":                       {0, []byte("BJ"), BJ, nil},
		"BL":                       {0, []byte("BL"), BL, nil},
		"BM":                       {0, []byte("BM"), BM, nil},
		"BN":                       {0, []byte("BN"), BN, nil},
		"BO":                       {0, []byte("BO"), BO, nil},
		"BQ":                       {0, []byte("BQ"), BQ, nil},
		"BR":                       {0, []byte("BR"), BR, nil},
		"BS":                       {0, []byte("BS"), BS, nil},
		"BT":                       {0, []byte("BT"), BT, nil},
		"BV":                       {0, []byte("BV"), BV, nil},
		"BW":                       {0, []byte("BW"), BW, nil},
		"BY":                       {0, []byte("BY"), BY, nil},
		"BZ":                       {0, []byte("BZ"), BZ, nil},
		"CA":                       {0, []byte("CA"), CA, nil},
		"CC":                       {0, []byte("CC"), CC, nil},
		"CD":                       {0, []byte("CD"), CD, nil},
		"CF":                       {0, []byte("CF"), CF, nil},
		"CG":                       {0, []byte("CG"), CG, nil},
		"CH":                       {0, []byte("CH"), CH, nil},
		"CI":                       {0, []byte("CI"), CI, nil},
		"CK":                       {0, []byte("CK"), CK, nil},
		"CL":                       {0, []byte("CL"), CL, nil},
		"CM":                       {0, []byte("CM"), CM, nil},
		"CN":                       {0, []byte("CN"), CN, nil},
		"CO":                       {0, []byte("CO"), CO, nil},
		"CR":                       {0, []byte("CR"), CR, nil},
		"CU":                       {0, []byte("CU"), CU, nil},
		"CV":                       {0, []byte("CV"), CV, nil},
		"CW":                       {0, []byte("CW"), CW, nil},
		"CX":                       {0, []byte("CX"), CX, nil},
		"CY":                       {0, []byte("CY"), CY, nil},
		"CZ":                       {0, []byte("CZ"), CZ, nil},
		"DE":                       {0, []byte("DE"), DE, nil},
		"DJ":                       {0, []byte("DJ"), DJ, nil},
		"DK":                       {0, []byte("DK"), DK, nil},
		"DM":                       {0, []byte("DM"), DM, nil},
		"DO":                       {0, []byte("DO"), DO, nil},
		"DZ":                       {0, []byte("DZ"), DZ, nil},
		"EC":                       {0, []byte("EC"), EC, nil},
		"EE":                       {0, []byte("EE"), EE, nil},
		"EG":                       {0, []byte("EG"), EG, nil},
		"EH":                       {0, []byte("EH"), EH, nil},
		"ER":                       {0, []byte("ER"), ER, nil},
		"ES":                       {0, []byte("ES"), ES, nil},
		"ET":                       {0, []byte("ET"), ET, nil},
		"FI":                       {0, []byte("FI"), FI, nil},
		"FJ":                       {0, []byte("FJ"), FJ, nil},
		"FK":                       {0, []byte("FK"), FK, nil},
		"FM":                       {0, []byte("FM"), FM, nil},
		"FO":                       {0, []byte("FO"), FO, nil},
		"FR":                       {0, []byte("FR"), FR, nil},
		"GA":                       {0, []byte("GA"), GA, nil},
		"GB":                       {0, []byte("GB"), GB, nil},
		"GD":                       {0, []byte("GD"), GD, nil},
		"GE":                       {0, []byte("GE"), GE, nil},
		"GF":                       {0, []byte("GF"), GF, nil},
		"GG":                       {0, []byte("GG"), GG, nil},
		"GH":                       {0, []byte("GH"), GH, nil},
		"GI":                       {0, []byte("GI"), GI, nil},
		"GL":                       {0, []byte("GL"), GL, nil},
		"GM":                       {0, []byte("GM"), GM, nil},
		"GN":                       {0, []byte("GN"), GN, nil},
		"GP":                       {0, []byte("GP"), GP, nil},
		"GQ":                       {0, []byte("GQ"), GQ, nil},
		"GR":                       {0, []byte("GR"), GR, nil},
		"GS":                       {0, []byte("GS"), GS, nil},
		"GT":                       {0, []byte("GT"), GT, nil},
		"GU":                       {0, []byte("GU"), GU, nil},
		"GW":                       {0, []byte("GW"), GW, nil},
		"GY":                       {0, []byte("GY"), GY, nil},
		"HK":                       {0, []byte("HK"), HK, nil},
		"HM":                       {0, []byte("HM"), HM, nil},
		"HN":                       {0, []byte("HN"), HN, nil},
		"HR":                       {0, []byte("HR"), HR, nil},
		"HT":                       {0, []byte("HT"), HT, nil},
		"HU":                       {0, []byte("HU"), HU, nil},
		"ID":                       {0, []byte("ID"), ID, nil},
		"IE":                       {0, []byte("IE"), IE, nil},
		"IL":                       {0, []byte("IL"), IL, nil},
		"IM":                       {0, []byte("IM"), IM, nil},
		"IN":                       {0, []byte("IN"), IN, nil},
		"IO":                       {0, []byte("IO"), IO, nil},
		"IQ":                       {0, []byte("IQ"), IQ, nil},
		"IR":                       {0, []byte("IR"), IR, nil},
		"IS":                       {0, []byte("IS"), IS, nil},
		"IT":                       {0, []byte("IT"), IT, nil},
		"JE":                       {0, []byte("JE"), JE, nil},
		"JM":                       {0, []byte("JM"), JM, nil},
		"JO":                       {0, []byte("JO"), JO, nil},
		"JP":                       {0, []byte("JP"), JP, nil},
		"KE":                       {0, []byte("KE"), KE, nil},
		"KG":                       {0, []byte("KG"), KG, nil},
		"KH":                       {0, []byte("KH"), KH, nil},
		"KI":                       {0, []byte("KI"), KI, nil},
		"KM":                       {0, []byte("KM"), KM, nil},
		"KN":                       {0, []byte("KN"), KN, nil},
		"KP":                       {0, []byte("KP"), KP, nil},
		"KR":                       {0, []byte("KR"), KR, nil},
		"KW":                       {0, []byte("KW"), KW, nil},
		"KY":                       {0, []byte("KY"), KY, nil},
		"KZ":                       {0, []byte("KZ"), KZ, nil},
		"LA":                       {0, []byte("LA"), LA, nil},
		"LB":                       {0, []byte("LB"), LB, nil},
		"LC":                       {0, []byte("LC"), LC, nil},
		"LI":                       {0, []byte("LI"), LI, nil},
		"LK":                       {0, []byte("LK"), LK, nil},
		"LR":                       {0, []byte("LR"), LR, nil},
		"LS":                       {0, []byte("LS"), LS, nil},
		"LT":                       {0, []byte("LT"), LT, nil},
		"LU":                       {0, []byte("LU"), LU, nil},
		"LV":                       {0, []byte("LV"), LV, nil},
		"LY":                       {0, []byte("LY"), LY, nil},
		"MA":                       {0, []byte("MA"), MA, nil},
		"MC":                       {0, []byte("MC"), MC, nil},
		"MD":                       {0, []byte("MD"), MD, nil},
		"ME":                       {0, []byte("ME"), ME, nil},
		"MF":                       {0, []byte("MF"), MF, nil},
		"MG":                       {0, []byte("MG"), MG, nil},
		"MH":                       {0, []byte("MH"), MH, nil},
		"MK":                       {0, []byte("MK"), MK, nil},
		"ML":                       {0, []byte("ML"), ML, nil},
		"MM":                       {0, []byte("MM"), MM, nil},
		"MN":                       {0, []byte("MN"), MN, nil},
		"MO":                       {0, []byte("MO"), MO, nil},
		"MP":                       {0, []byte("MP"), MP, nil},
		"MQ":                       {0, []byte("MQ"), MQ, nil},
		"MR":                       {0, []byte("MR"), MR, nil},
		"MS":                       {0, []byte("MS"), MS, nil},
		"MT":                       {0, []byte("MT"), MT, nil},
		"MU":                       {0, []byte("MU"), MU, nil},
		"MV":                       {0, []byte("MV"), MV, nil},
		"MW":                       {0, []byte("MW"), MW, nil},
		"MX":                       {0, []byte("MX"), MX, nil},
		"MY":                       {0, []byte("MY"), MY, nil},
		"MZ":                       {0, []byte("MZ"), MZ, nil},
		"NA":                       {0, []byte("NA"), NA, nil},
		"NC":                       {0, []byte("NC"), NC, nil},
		"NE":                       {0, []byte("NE"), NE, nil},
		"NF":                       {0, []byte("NF"), NF, nil},
		"NG":                       {0, []byte("NG"), NG, nil},
		"NI":                       {0, []byte("NI"), NI, nil},
		"NL":                       {0, []byte("NL"), NL, nil},
		"NO":                       {0, []byte("NO"), NO, nil},
		"NP":                       {0, []byte("NP"), NP, nil},
		"NR":                       {0, []byte("NR"), NR, nil},
		"NU":                       {0, []byte("NU"), NU, nil},
		"NZ":                       {0, []byte("NZ"), NZ, nil},
		"OM":                       {0, []byte("OM"), OM, nil},
		"PA":                       {0, []byte("PA"), PA, nil},
		"PE":                       {0, []byte("PE"), PE, nil},
		"PF":                       {0, []byte("PF"), PF, nil},
		"PG":                       {0, []byte("PG"), PG, nil},
		"PH":                       {0, []byte("PH"), PH, nil},
		"PK":                       {0, []byte("PK"), PK, nil},
		"PL":                       {0, []byte("PL"), PL, nil},
		"PM":                       {0, []byte("PM"), PM, nil},
		"PN":                       {0, []byte("PN"), PN, nil},
		"PR":                       {0, []byte("PR"), PR, nil},
		"PS":                       {0, []byte("PS"), PS, nil},
		"PT":                       {0, []byte("PT"), PT, nil},
		"PW":                       {0, []byte("PW"), PW, nil},
		"PY":                       {0, []byte("PY"), PY, nil},
		"QA":                       {0, []byte("QA"), QA, nil},
		"RE":                       {0, []byte("RE"), RE, nil},
		"RO":                       {0, []byte("RO"), RO, nil},
		"RS":                       {0, []byte("RS"), RS, nil},
		"RU":                       {0, []byte("RU"), RU, nil},
		"RW":                       {0, []byte("RW"), RW, nil},
		"SA":                       {0, []byte("SA"), SA, nil},
		"SB":                       {0, []byte("SB"), SB, nil},
		"SC":                       {0, []byte("SC"), SC, nil},
		"SD":                       {0, []byte("SD"), SD, nil},
		"SE":                       {0, []byte("SE"), SE, nil},
		"SG":                       {0, []byte("SG"), SG, nil},
		"SH":                       {0, []byte("SH"), SH, nil},
		"SI":                       {0, []byte("SI"), SI, nil},
		"SJ":                       {0, []byte("SJ"), SJ, nil},
		"SK":                       {0, []byte("SK"), SK, nil},
		"SL":                       {0, []byte("SL"), SL, nil},
		"SM":                       {0, []byte("SM"), SM, nil},
		"SN":                       {0, []byte("SN"), SN, nil},
		"SO":                       {0, []byte("SO"), SO, nil},
		"SR":                       {0, []byte("SR"), SR, nil},
		"SS":                       {0, []byte("SS"), SS, nil},
		"ST":                       {0, []byte("ST"), ST, nil},
		"SV":                       {0, []byte("SV"), SV, nil},
		"SX":                       {0, []byte("SX"), SX, nil},
		"SY":                       {0, []byte("SY"), SY, nil},
		"SZ":                       {0, []byte("SZ"), SZ, nil},
		"TC":                       {0, []byte("TC"), TC, nil},
		"TD":                       {0, []byte("TD"), TD, nil},
		"TF":                       {0, []byte("TF"), TF, nil},
		"TG":                       {0, []byte("TG"), TG, nil},
		"TH":                       {0, []byte("TH"), TH, nil},
		"TJ":                       {0, []byte("TJ"), TJ, nil},
		"TK":                       {0, []byte("TK"), TK, nil},
		"TL":                       {0, []byte("TL"), TL, nil},
		"TM":                       {0, []byte("TM"), TM, nil},
		"TN":                       {0, []byte("TN"), TN, nil},
		"TO":                       {0, []byte("TO"), TO, nil},
		"TR":                       {0, []byte("TR"), TR, nil},
		"TT":                       {0, []byte("TT"), TT, nil},
		"TV":                       {0, []byte("TV"), TV, nil},
		"TW":                       {0, []byte("TW"), TW, nil},
		"TZ":                       {0, []byte("TZ"), TZ, nil},
		"UA":                       {0, []byte("UA"), UA, nil},
		"UG":                       {0, []byte("UG"), UG, nil},
		"UM":                       {0, []byte("UM"), UM, nil},
		"US":                       {0, []byte("US"), US, nil},
		"UY":                       {0, []byte("UY"), UY, nil},
		"UZ":                       {0, []byte("UZ"), UZ, nil},
		"VA":                       {0, []byte("VA"), VA, nil},
		"VC":                       {0, []byte("VC"), VC, nil},
		"VE":                       {0, []byte("VE"), VE, nil},
		"VG":                       {0, []byte("VG"), VG, nil},
		"VI":                       {0, []byte("VI"), VI, nil},
		"VN":                       {0, []byte("VN"), VN, nil},
		"VU":                       {0, []byte("VU"), VU, nil},
		"WF":                       {0, []byte("WF"), WF, nil},
		"WS":                       {0, []byte("WS"), WS, nil},
		"YE":                       {0, []byte("YE"), YE, nil},
		"YT":                       {0, []byte("YT"), YT, nil},
		"ZA":                       {0, []byte("ZA"), ZA, nil},
		"ZM":                       {0, []byte("ZM"), ZM, nil},
		"ZW":                       {0, []byte("ZW"), ZW, nil},
	}

	for name, tc := range tests {
		t.Run(name, func(t *testing.T) {
			err := tc.code.UnmarshalJSON(tc.b)
			if tc.wantErr != nil {
				if !reflect.DeepEqual(tc.wantErr, err) {
					t.Errorf("UnmarshalJSON() error = %v, wantErr %v", err, tc.wantErr)
				}
			} else {
				if tc.code != tc.want {
					t.Errorf("UnmarshalJSON() got = %v, want %v", tc.code, tc.want)
				}
			}
		})
	}
}

func TestCountryCode_UnmarshalText(t *testing.T) {
	type tcase struct {
		code    CountryCode
		want    CountryCode
		wantErr error
	}

	tests := map[string]tcase{
		"AD": {0, AD, nil},
		"AE": {0, AE, nil},
		"AF": {0, AF, nil},
		"AG": {0, AG, nil},
		"AI": {0, AI, nil},
		"AL": {0, AL, nil},
		"AM": {0, AM, nil},
		"AO": {0, AO, nil},
		"AQ": {0, AQ, nil},
		"AR": {0, AR, nil},
		"AS": {0, AS, nil},
		"AT": {0, AT, nil},
		"AU": {0, AU, nil},
		"AW": {0, AW, nil},
		"AX": {0, AX, nil},
		"AZ": {0, AZ, nil},
		"BA": {0, BA, nil},
		"BB": {0, BB, nil},
		"BD": {0, BD, nil},
		"BE": {0, BE, nil},
		"BF": {0, BF, nil},
		"BG": {0, BG, nil},
		"BH": {0, BH, nil},
		"BI": {0, BI, nil},
		"BJ": {0, BJ, nil},
		"BL": {0, BL, nil},
		"BM": {0, BM, nil},
		"BN": {0, BN, nil},
		"BO": {0, BO, nil},
		"BQ": {0, BQ, nil},
		"BR": {0, BR, nil},
		"BS": {0, BS, nil},
		"BT": {0, BT, nil},
		"BV": {0, BV, nil},
		"BW": {0, BW, nil},
		"BY": {0, BY, nil},
		"BZ": {0, BZ, nil},
		"CA": {0, CA, nil},
		"CC": {0, CC, nil},
		"CD": {0, CD, nil},
		"CF": {0, CF, nil},
		"CG": {0, CG, nil},
		"CH": {0, CH, nil},
		"CI": {0, CI, nil},
		"CK": {0, CK, nil},
		"CL": {0, CL, nil},
		"CM": {0, CM, nil},
		"CN": {0, CN, nil},
		"CO": {0, CO, nil},
		"CR": {0, CR, nil},
		"CU": {0, CU, nil},
		"CV": {0, CV, nil},
		"CW": {0, CW, nil},
		"CX": {0, CX, nil},
		"CY": {0, CY, nil},
		"CZ": {0, CZ, nil},
		"DE": {0, DE, nil},
		"DJ": {0, DJ, nil},
		"DK": {0, DK, nil},
		"DM": {0, DM, nil},
		"DO": {0, DO, nil},
		"DZ": {0, DZ, nil},
		"EC": {0, EC, nil},
		"EE": {0, EE, nil},
		"EG": {0, EG, nil},
		"EH": {0, EH, nil},
		"ER": {0, ER, nil},
		"ES": {0, ES, nil},
		"ET": {0, ET, nil},
		"FI": {0, FI, nil},
		"FJ": {0, FJ, nil},
		"FK": {0, FK, nil},
		"FM": {0, FM, nil},
		"FO": {0, FO, nil},
		"FR": {0, FR, nil},
		"GA": {0, GA, nil},
		"GB": {0, GB, nil},
		"GD": {0, GD, nil},
		"GE": {0, GE, nil},
		"GF": {0, GF, nil},
		"GG": {0, GG, nil},
		"GH": {0, GH, nil},
		"GI": {0, GI, nil},
		"GL": {0, GL, nil},
		"GM": {0, GM, nil},
		"GN": {0, GN, nil},
		"GP": {0, GP, nil},
		"GQ": {0, GQ, nil},
		"GR": {0, GR, nil},
		"GS": {0, GS, nil},
		"GT": {0, GT, nil},
		"GU": {0, GU, nil},
		"GW": {0, GW, nil},
		"GY": {0, GY, nil},
		"HK": {0, HK, nil},
		"HM": {0, HM, nil},
		"HN": {0, HN, nil},
		"HR": {0, HR, nil},
		"HT": {0, HT, nil},
		"HU": {0, HU, nil},
		"ID": {0, ID, nil},
		"IE": {0, IE, nil},
		"IL": {0, IL, nil},
		"IM": {0, IM, nil},
		"IN": {0, IN, nil},
		"IO": {0, IO, nil},
		"IQ": {0, IQ, nil},
		"IR": {0, IR, nil},
		"IS": {0, IS, nil},
		"IT": {0, IT, nil},
		"JE": {0, JE, nil},
		"JM": {0, JM, nil},
		"JO": {0, JO, nil},
		"JP": {0, JP, nil},
		"KE": {0, KE, nil},
		"KG": {0, KG, nil},
		"KH": {0, KH, nil},
		"KI": {0, KI, nil},
		"KM": {0, KM, nil},
		"KN": {0, KN, nil},
		"KP": {0, KP, nil},
		"KR": {0, KR, nil},
		"KW": {0, KW, nil},
		"KY": {0, KY, nil},
		"KZ": {0, KZ, nil},
		"LA": {0, LA, nil},
		"LB": {0, LB, nil},
		"LC": {0, LC, nil},
		"LI": {0, LI, nil},
		"LK": {0, LK, nil},
		"LR": {0, LR, nil},
		"LS": {0, LS, nil},
		"LT": {0, LT, nil},
		"LU": {0, LU, nil},
		"LV": {0, LV, nil},
		"LY": {0, LY, nil},
		"MA": {0, MA, nil},
		"MC": {0, MC, nil},
		"MD": {0, MD, nil},
		"ME": {0, ME, nil},
		"MF": {0, MF, nil},
		"MG": {0, MG, nil},
		"MH": {0, MH, nil},
		"MK": {0, MK, nil},
		"ML": {0, ML, nil},
		"MM": {0, MM, nil},
		"MN": {0, MN, nil},
		"MO": {0, MO, nil},
		"MP": {0, MP, nil},
		"MQ": {0, MQ, nil},
		"MR": {0, MR, nil},
		"MS": {0, MS, nil},
		"MT": {0, MT, nil},
		"MU": {0, MU, nil},
		"MV": {0, MV, nil},
		"MW": {0, MW, nil},
		"MX": {0, MX, nil},
		"MY": {0, MY, nil},
		"MZ": {0, MZ, nil},
		"NA": {0, NA, nil},
		"NC": {0, NC, nil},
		"NE": {0, NE, nil},
		"NF": {0, NF, nil},
		"NG": {0, NG, nil},
		"NI": {0, NI, nil},
		"NL": {0, NL, nil},
		"NO": {0, NO, nil},
		"NP": {0, NP, nil},
		"NR": {0, NR, nil},
		"NU": {0, NU, nil},
		"NZ": {0, NZ, nil},
		"OM": {0, OM, nil},
		"PA": {0, PA, nil},
		"PE": {0, PE, nil},
		"PF": {0, PF, nil},
		"PG": {0, PG, nil},
		"PH": {0, PH, nil},
		"PK": {0, PK, nil},
		"PL": {0, PL, nil},
		"PM": {0, PM, nil},
		"PN": {0, PN, nil},
		"PR": {0, PR, nil},
		"PS": {0, PS, nil},
		"PT": {0, PT, nil},
		"PW": {0, PW, nil},
		"PY": {0, PY, nil},
		"QA": {0, QA, nil},
		"RE": {0, RE, nil},
		"RO": {0, RO, nil},
		"RS": {0, RS, nil},
		"RU": {0, RU, nil},
		"RW": {0, RW, nil},
		"SA": {0, SA, nil},
		"SB": {0, SB, nil},
		"SC": {0, SC, nil},
		"SD": {0, SD, nil},
		"SE": {0, SE, nil},
		"SG": {0, SG, nil},
		"SH": {0, SH, nil},
		"SI": {0, SI, nil},
		"SJ": {0, SJ, nil},
		"SK": {0, SK, nil},
		"SL": {0, SL, nil},
		"SM": {0, SM, nil},
		"SN": {0, SN, nil},
		"SO": {0, SO, nil},
		"SR": {0, SR, nil},
		"SS": {0, SS, nil},
		"ST": {0, ST, nil},
		"SV": {0, SV, nil},
		"SX": {0, SX, nil},
		"SY": {0, SY, nil},
		"SZ": {0, SZ, nil},
		"TC": {0, TC, nil},
		"TD": {0, TD, nil},
		"TF": {0, TF, nil},
		"TG": {0, TG, nil},
		"TH": {0, TH, nil},
		"TJ": {0, TJ, nil},
		"TK": {0, TK, nil},
		"TL": {0, TL, nil},
		"TM": {0, TM, nil},
		"TN": {0, TN, nil},
		"TO": {0, TO, nil},
		"TR": {0, TR, nil},
		"TT": {0, TT, nil},
		"TV": {0, TV, nil},
		"TW": {0, TW, nil},
		"TZ": {0, TZ, nil},
		"UA": {0, UA, nil},
		"UG": {0, UG, nil},
		"UM": {0, UM, nil},
		"US": {0, US, nil},
		"UY": {0, UY, nil},
		"UZ": {0, UZ, nil},
		"VA": {0, VA, nil},
		"VC": {0, VC, nil},
		"VE": {0, VE, nil},
		"VG": {0, VG, nil},
		"VI": {0, VI, nil},
		"VN": {0, VN, nil},
		"VU": {0, VU, nil},
		"WF": {0, WF, nil},
		"WS": {0, WS, nil},
		"YE": {0, YE, nil},
		"YT": {0, YT, nil},
		"ZA": {0, ZA, nil},
		"ZM": {0, ZM, nil},
		"ZW": {0, ZW, nil},
	}

	for name, tc := range tests {
		t.Run(name, func(t *testing.T) {
			err := tc.code.UnmarshalText([]byte(tc.want.String()))
			if tc.wantErr != nil {
				if !reflect.DeepEqual(tc.wantErr, err) {
					t.Errorf("UnmarshalText() error = %v, wantErr %v", err, tc.wantErr)
				}
			} else {
				if tc.code != tc.want {
					t.Errorf("UnmarshalText() got = %v, want %v", tc.code, tc.want)
				}
			}
		})
	}
}

func TestStringToCountryCode(t *testing.T) {
	type tcase struct {
		strCode string
		want    CountryCode
		wantErr error
	}

	tests := map[string]tcase{
		"Err1": {"", 0, ErrInvalidStringCode},
		"Err2": {"ZZ", 0, ErrInvalidStringCode},
		"Err3": {"AAA", 0, ErrInvalidStringCode},
		"Err4": {"Z", 0, ErrInvalidStringCode},
		"AD":   {"AD", AD, nil},
		"AE":   {"AE", AE, nil},
		"AF":   {"AF", AF, nil},
		"AG":   {"AG", AG, nil},
		"AI":   {"AI", AI, nil},
		"AL":   {"AL", AL, nil},
		"AM":   {"AM", AM, nil},
		"AO":   {"AO", AO, nil},
		"AQ":   {"AQ", AQ, nil},
		"AR":   {"AR", AR, nil},
		"AS":   {"AS", AS, nil},
		"AT":   {"AT", AT, nil},
		"AU":   {"AU", AU, nil},
		"AW":   {"AW", AW, nil},
		"AX":   {"AX", AX, nil},
		"AZ":   {"AZ", AZ, nil},
		"BA":   {"BA", BA, nil},
		"BB":   {"BB", BB, nil},
		"BD":   {"BD", BD, nil},
		"BE":   {"BE", BE, nil},
		"BF":   {"BF", BF, nil},
		"BG":   {"BG", BG, nil},
		"BH":   {"BH", BH, nil},
		"BI":   {"BI", BI, nil},
		"BJ":   {"BJ", BJ, nil},
		"BL":   {"BL", BL, nil},
		"BM":   {"BM", BM, nil},
		"BN":   {"BN", BN, nil},
		"BO":   {"BO", BO, nil},
		"BQ":   {"BQ", BQ, nil},
		"BR":   {"BR", BR, nil},
		"BS":   {"BS", BS, nil},
		"BT":   {"BT", BT, nil},
		"BV":   {"BV", BV, nil},
		"BW":   {"BW", BW, nil},
		"BY":   {"BY", BY, nil},
		"BZ":   {"BZ", BZ, nil},
		"CA":   {"CA", CA, nil},
		"CC":   {"CC", CC, nil},
		"CD":   {"CD", CD, nil},
		"CF":   {"CF", CF, nil},
		"CG":   {"CG", CG, nil},
		"CH":   {"CH", CH, nil},
		"CI":   {"CI", CI, nil},
		"CK":   {"CK", CK, nil},
		"CL":   {"CL", CL, nil},
		"CM":   {"CM", CM, nil},
		"CN":   {"CN", CN, nil},
		"CO":   {"CO", CO, nil},
		"CR":   {"CR", CR, nil},
		"CU":   {"CU", CU, nil},
		"CV":   {"CV", CV, nil},
		"CW":   {"CW", CW, nil},
		"CX":   {"CX", CX, nil},
		"CY":   {"CY", CY, nil},
		"CZ":   {"CZ", CZ, nil},
		"DE":   {"DE", DE, nil},
		"DJ":   {"DJ", DJ, nil},
		"DK":   {"DK", DK, nil},
		"DM":   {"DM", DM, nil},
		"DO":   {"DO", DO, nil},
		"DZ":   {"DZ", DZ, nil},
		"EC":   {"EC", EC, nil},
		"EE":   {"EE", EE, nil},
		"EG":   {"EG", EG, nil},
		"EH":   {"EH", EH, nil},
		"ER":   {"ER", ER, nil},
		"ES":   {"ES", ES, nil},
		"ET":   {"ET", ET, nil},
		"FI":   {"FI", FI, nil},
		"FJ":   {"FJ", FJ, nil},
		"FK":   {"FK", FK, nil},
		"FM":   {"FM", FM, nil},
		"FO":   {"FO", FO, nil},
		"FR":   {"FR", FR, nil},
		"GA":   {"GA", GA, nil},
		"GB":   {"GB", GB, nil},
		"GD":   {"GD", GD, nil},
		"GE":   {"GE", GE, nil},
		"GF":   {"GF", GF, nil},
		"GG":   {"GG", GG, nil},
		"GH":   {"GH", GH, nil},
		"GI":   {"GI", GI, nil},
		"GL":   {"GL", GL, nil},
		"GM":   {"GM", GM, nil},
		"GN":   {"GN", GN, nil},
		"GP":   {"GP", GP, nil},
		"GQ":   {"GQ", GQ, nil},
		"GR":   {"GR", GR, nil},
		"GS":   {"GS", GS, nil},
		"GT":   {"GT", GT, nil},
		"GU":   {"GU", GU, nil},
		"GW":   {"GW", GW, nil},
		"GY":   {"GY", GY, nil},
		"HK":   {"HK", HK, nil},
		"HM":   {"HM", HM, nil},
		"HN":   {"HN", HN, nil},
		"HR":   {"HR", HR, nil},
		"HT":   {"HT", HT, nil},
		"HU":   {"HU", HU, nil},
		"ID":   {"ID", ID, nil},
		"IE":   {"IE", IE, nil},
		"IL":   {"IL", IL, nil},
		"IM":   {"IM", IM, nil},
		"IN":   {"IN", IN, nil},
		"IO":   {"IO", IO, nil},
		"IQ":   {"IQ", IQ, nil},
		"IR":   {"IR", IR, nil},
		"IS":   {"IS", IS, nil},
		"IT":   {"IT", IT, nil},
		"JE":   {"JE", JE, nil},
		"JM":   {"JM", JM, nil},
		"JO":   {"JO", JO, nil},
		"JP":   {"JP", JP, nil},
		"KE":   {"KE", KE, nil},
		"KG":   {"KG", KG, nil},
		"KH":   {"KH", KH, nil},
		"KI":   {"KI", KI, nil},
		"KM":   {"KM", KM, nil},
		"KN":   {"KN", KN, nil},
		"KP":   {"KP", KP, nil},
		"KR":   {"KR", KR, nil},
		"KW":   {"KW", KW, nil},
		"KY":   {"KY", KY, nil},
		"KZ":   {"KZ", KZ, nil},
		"LA":   {"LA", LA, nil},
		"LB":   {"LB", LB, nil},
		"LC":   {"LC", LC, nil},
		"LI":   {"LI", LI, nil},
		"LK":   {"LK", LK, nil},
		"LR":   {"LR", LR, nil},
		"LS":   {"LS", LS, nil},
		"LT":   {"LT", LT, nil},
		"LU":   {"LU", LU, nil},
		"LV":   {"LV", LV, nil},
		"LY":   {"LY", LY, nil},
		"MA":   {"MA", MA, nil},
		"MC":   {"MC", MC, nil},
		"MD":   {"MD", MD, nil},
		"ME":   {"ME", ME, nil},
		"MF":   {"MF", MF, nil},
		"MG":   {"MG", MG, nil},
		"MH":   {"MH", MH, nil},
		"MK":   {"MK", MK, nil},
		"ML":   {"ML", ML, nil},
		"MM":   {"MM", MM, nil},
		"MN":   {"MN", MN, nil},
		"MO":   {"MO", MO, nil},
		"MP":   {"MP", MP, nil},
		"MQ":   {"MQ", MQ, nil},
		"MR":   {"MR", MR, nil},
		"MS":   {"MS", MS, nil},
		"MT":   {"MT", MT, nil},
		"MU":   {"MU", MU, nil},
		"MV":   {"MV", MV, nil},
		"MW":   {"MW", MW, nil},
		"MX":   {"MX", MX, nil},
		"MY":   {"MY", MY, nil},
		"MZ":   {"MZ", MZ, nil},
		"NA":   {"NA", NA, nil},
		"NC":   {"NC", NC, nil},
		"NE":   {"NE", NE, nil},
		"NF":   {"NF", NF, nil},
		"NG":   {"NG", NG, nil},
		"NI":   {"NI", NI, nil},
		"NL":   {"NL", NL, nil},
		"NO":   {"NO", NO, nil},
		"NP":   {"NP", NP, nil},
		"NR":   {"NR", NR, nil},
		"NU":   {"NU", NU, nil},
		"NZ":   {"NZ", NZ, nil},
		"OM":   {"OM", OM, nil},
		"PA":   {"PA", PA, nil},
		"PE":   {"PE", PE, nil},
		"PF":   {"PF", PF, nil},
		"PG":   {"PG", PG, nil},
		"PH":   {"PH", PH, nil},
		"PK":   {"PK", PK, nil},
		"PL":   {"PL", PL, nil},
		"PM":   {"PM", PM, nil},
		"PN":   {"PN", PN, nil},
		"PR":   {"PR", PR, nil},
		"PS":   {"PS", PS, nil},
		"PT":   {"PT", PT, nil},
		"PW":   {"PW", PW, nil},
		"PY":   {"PY", PY, nil},
		"QA":   {"QA", QA, nil},
		"RE":   {"RE", RE, nil},
		"RO":   {"RO", RO, nil},
		"RS":   {"RS", RS, nil},
		"RU":   {"RU", RU, nil},
		"RW":   {"RW", RW, nil},
		"SA":   {"SA", SA, nil},
		"SB":   {"SB", SB, nil},
		"SC":   {"SC", SC, nil},
		"SD":   {"SD", SD, nil},
		"SE":   {"SE", SE, nil},
		"SG":   {"SG", SG, nil},
		"SH":   {"SH", SH, nil},
		"SI":   {"SI", SI, nil},
		"SJ":   {"SJ", SJ, nil},
		"SK":   {"SK", SK, nil},
		"SL":   {"SL", SL, nil},
		"SM":   {"SM", SM, nil},
		"SN":   {"SN", SN, nil},
		"SO":   {"SO", SO, nil},
		"SR":   {"SR", SR, nil},
		"SS":   {"SS", SS, nil},
		"ST":   {"ST", ST, nil},
		"SV":   {"SV", SV, nil},
		"SX":   {"SX", SX, nil},
		"SY":   {"SY", SY, nil},
		"SZ":   {"SZ", SZ, nil},
		"TC":   {"TC", TC, nil},
		"TD":   {"TD", TD, nil},
		"TF":   {"TF", TF, nil},
		"TG":   {"TG", TG, nil},
		"TH":   {"TH", TH, nil},
		"TJ":   {"TJ", TJ, nil},
		"TK":   {"TK", TK, nil},
		"TL":   {"TL", TL, nil},
		"TM":   {"TM", TM, nil},
		"TN":   {"TN", TN, nil},
		"TO":   {"TO", TO, nil},
		"TR":   {"TR", TR, nil},
		"TT":   {"TT", TT, nil},
		"TV":   {"TV", TV, nil},
		"TW":   {"TW", TW, nil},
		"TZ":   {"TZ", TZ, nil},
		"UA":   {"UA", UA, nil},
		"UG":   {"UG", UG, nil},
		"UM":   {"UM", UM, nil},
		"US":   {"US", US, nil},
		"UY":   {"UY", UY, nil},
		"UZ":   {"UZ", UZ, nil},
		"VA":   {"VA", VA, nil},
		"VC":   {"VC", VC, nil},
		"VE":   {"VE", VE, nil},
		"VG":   {"VG", VG, nil},
		"VI":   {"VI", VI, nil},
		"VN":   {"VN", VN, nil},
		"VU":   {"VU", VU, nil},
		"WF":   {"WF", WF, nil},
		"WS":   {"WS", WS, nil},
		"YE":   {"YE", YE, nil},
		"YT":   {"YT", YT, nil},
		"ZA":   {"ZA", ZA, nil},
		"ZM":   {"ZM", ZM, nil},
		"ZW":   {"ZW", ZW, nil},
	}

	for name, tc := range tests {
		t.Run(name, func(t *testing.T) {
			got, err := StringToCountryCode(tc.strCode)
			if tc.wantErr != nil {
				if !reflect.DeepEqual(tc.wantErr, err) {
					t.Errorf("StringToCountryCode() error = %v, wantErr %v", err, tc.wantErr)
				}
			} else {
				if got != tc.want {
					t.Errorf("StringToCountryCode() got = %v, want %v", got, tc.want)
				}
			}
		})
	}
}

func TestListCountryCodes(t *testing.T) {
	t.Run("ListCountryCodes", func(t *testing.T) {
		got := ListCountryCodes()

		if !sort.SliceIsSorted(got, func(i, j int) bool {
			return got[i].String() < got[j].String()
		}) {
			t.Errorf("ListCurrencyCodes() should return sorted slice")
		}

		if len(got) != len(stringToCountryCode) {
			t.Errorf("ListCountryCodes() should have len == %d", len(stringToCurrencyCode))
		}
	})
}
